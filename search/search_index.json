{
    "docs": [
        {
            "location": "/", 
            "text": "LXD\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nControl LXD through RPC which uses the local instance of LXD and \nlxc query\n to manage local or remote LXD servers.\n\n\nInstall\n\n\nRequire this package with composer using the following command:\n\n\n$ composer require plinker/lxd\n\n\n\n\n\nSetup\n\n\nThe webserver user must be able to execute \nlxc\n commands, so add the user to sudoers file under \nUser privilege specification\n:\n\n\n# User privilege specification\nroot     ALL=(ALL:ALL) ALL\nwww-data ALL=(ALL:ALL) NOPASSWD: /usr/bin/lxc\n\n\n\n\n\nAlso add www-data to lxd group:#\n\n\nsudo usermod --append --groups lxd www-data\n\n\n\n\n\nClient\n\n\nCreating a client instance is done as follows:\n\n\n?php\n\n\nrequire\n \nvendor/autoload.php\n;\n\n\n\n/**\n\n\n * Initialize plinker client.\n\n\n *\n\n\n * @param string $server - URL to server listener.\n\n\n * @param string $config - server secret, and/or a additional component data\n\n\n */\n\n\n$client\n \n=\n \nnew\n \n\\Plinker\\Core\\Client\n(\n\n    \nhttp://example.com/server.php\n,\n\n    \n[\n\n        \nsecret\n \n=\n \na secret password\n\n    \n]\n\n\n);\n\n\n\n// or using global function\n\n\n$client\n \n=\n \nplinker_client\n(\nhttp://example.com/server.php\n,\n \na secret password\n);\n\n\n\n\n\n\nBasic Usage\n\n\nEssentially you can do any LXD operation with the single \n$client-\nlxd-\nquery()\n method, or you can use the \nhelper methods\n  which cover all the LXD endpoints.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote and endpoint\n\n\nlocal\n\n\n\n\n\n\nrest method\n\n\nstring\n\n\ne.g GET, POST, DELETE, PUT, PATCH\n\n\nGET\n\n\n\n\n\n\npayload\n\n\nobject | json string\n\n\nRest json payload\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nPre-resolve mutation function\n\n\n\n\n\n\n\n\n\n\n$\nclient-\nlxd-\nquery\n(\nremote:/1.0\n,\n \nGET\n,\n \n[]\n);\n\n\n\n\n\n\nFull Documentation\n\n\nTo view the complete docs for this component including all methods see: \nhttps://plinker-rpc.github.io/lxd/\n\n\nMethods\n\n\nOnce setup, you call the class though its namespace to its method, see docs for further details.\n\n\nList Containers\n\n\nList containers on remote.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\ncontainers-\nlist(\nlocal\n, function ($result) {\n\n\n    return str_replace(\n/1.0/containers/\n, \n, $result);    \n\n\n});\n\n\n\n\n\n\nResponse\n\n\nArray\n(\n    [0] =\n my-container\n)\n\n\n\n\n\nTesting\n\n\nThere are no tests setup for this component.\n\n\nContributing\n\n\nPlease see \nCONTRIBUTING\n for details.\n\n\nSecurity\n\n\nIf you discover any security related issues, please contact me via \nhttps://cherone.co.uk\n instead of using the issue tracker.\n\n\nCredits\n\n\n\n\nLawrence Cherone\n\n\nAll Contributors\n\n\n\n\nDevelopment Encouragement\n\n\nIf you use this project and make money from it or want to show your appreciation,\nplease feel free to make a donation \nhttps://www.paypal.me/lcherone\n, thanks.\n\n\nSponsors\n\n\nGet your company or name listed throughout the documentation and on each github repository, contact me at \nhttps://cherone.co.uk\n for further details.\n\n\nLicense\n\n\nThe MIT License (MIT). Please see \nLicense File\n for more information.\n\n\nSee the \norganisations page\n for additional components.", 
            "title": "Home"
        }, 
        {
            "location": "/#lxd", 
            "text": "Control LXD through RPC which uses the local instance of LXD and  lxc query  to manage local or remote LXD servers.", 
            "title": "LXD"
        }, 
        {
            "location": "/#install", 
            "text": "Require this package with composer using the following command:  $ composer require plinker/lxd", 
            "title": "Install"
        }, 
        {
            "location": "/#setup", 
            "text": "The webserver user must be able to execute  lxc  commands, so add the user to sudoers file under  User privilege specification :  # User privilege specification\nroot     ALL=(ALL:ALL) ALL\nwww-data ALL=(ALL:ALL) NOPASSWD: /usr/bin/lxc  Also add www-data to lxd group:#  sudo usermod --append --groups lxd www-data", 
            "title": "Setup"
        }, 
        {
            "location": "/#client", 
            "text": "Creating a client instance is done as follows:  ?php  require   vendor/autoload.php ;  /**   * Initialize plinker client.   *   * @param string $server - URL to server listener.   * @param string $config - server secret, and/or a additional component data   */  $client   =   new   \\Plinker\\Core\\Client ( \n     http://example.com/server.php , \n     [ \n         secret   =   a secret password \n     ]  );  // or using global function  $client   =   plinker_client ( http://example.com/server.php ,   a secret password );", 
            "title": "Client"
        }, 
        {
            "location": "/#basic-usage", 
            "text": "Essentially you can do any LXD operation with the single  $client- lxd- query()  method, or you can use the  helper methods   which cover all the LXD endpoints.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote and endpoint  local    rest method  string  e.g GET, POST, DELETE, PUT, PATCH  GET    payload  object | json string  Rest json payload     mutator  function  Pre-resolve mutation function      $ client- lxd- query ( remote:/1.0 ,   GET ,   [] );", 
            "title": "Basic Usage"
        }, 
        {
            "location": "/#full-documentation", 
            "text": "To view the complete docs for this component including all methods see:  https://plinker-rpc.github.io/lxd/", 
            "title": "Full Documentation"
        }, 
        {
            "location": "/#methods", 
            "text": "Once setup, you call the class though its namespace to its method, see docs for further details.", 
            "title": "Methods"
        }, 
        {
            "location": "/#list-containers", 
            "text": "List containers on remote.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    mutator  function  Mutation function      $client- lxd- containers- list( local , function ($result) {      return str_replace( /1.0/containers/ ,  , $result);      });   Response  Array\n(\n    [0] =  my-container\n)", 
            "title": "List Containers"
        }, 
        {
            "location": "/#testing", 
            "text": "There are no tests setup for this component.", 
            "title": "Testing"
        }, 
        {
            "location": "/#contributing", 
            "text": "Please see  CONTRIBUTING  for details.", 
            "title": "Contributing"
        }, 
        {
            "location": "/#security", 
            "text": "If you discover any security related issues, please contact me via  https://cherone.co.uk  instead of using the issue tracker.", 
            "title": "Security"
        }, 
        {
            "location": "/#credits", 
            "text": "Lawrence Cherone  All Contributors", 
            "title": "Credits"
        }, 
        {
            "location": "/#development-encouragement", 
            "text": "If you use this project and make money from it or want to show your appreciation,\nplease feel free to make a donation  https://www.paypal.me/lcherone , thanks.", 
            "title": "Development Encouragement"
        }, 
        {
            "location": "/#sponsors", 
            "text": "Get your company or name listed throughout the documentation and on each github repository, contact me at  https://cherone.co.uk  for further details.", 
            "title": "Sponsors"
        }, 
        {
            "location": "/#license", 
            "text": "The MIT License (MIT). Please see  License File  for more information.  See the  organisations page  for additional components.", 
            "title": "License"
        }, 
        {
            "location": "/aliases/", 
            "text": "Helper methods for image aliases.\n\n\nList\n\n\nList image aliases\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\nimages\n-\naliases\n-\nlist\n(\nlocal\n);\n\n\n\n\n\n\nResponse\n\n\n[\n\n    \n/1.0/images/aliases/alias-name\n\n\n]\n\n\n\n\n\n\nInfo\n\n\nGet image alias information.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nAlias name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\nimages\n-\naliases\n-\ninfo\n(\nlocal\n,\n \nalias-name\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \ndescription\n:\n \nThe alias description\n,\n\n    \nname\n:\n \nalias-name\n,\n\n    \ntarget\n:\n \nimage fingerprint\n\n\n}\n\n\n\n\n\n\nCreate\n\n\nGet image alias information.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nAlias options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\nimages\n-\naliases\n-\ncreate\n(\nlocal\n,\n \n[\n\n    \ndescription\n \n=\n \nThe alias description\n,\n\n    \ntarget\n \n=\n \nimage fingerprint\n,\n\n    \nname\n \n=\n \nalias-name\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nReplace\n\n\nReplace alias target or description.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nAlias name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nAlias options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\nimages\n-\naliases\n-\nreplace\n(\nlocal\n,\n \nalias-name\n,\n \n[\n\n    \ndescription\n \n=\n \nNew description\n,\n\n    \ntarget\n \n=\n \nimage fingerprint\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nUpdate\n\n\nUpdate alias target or description.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nAlias name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nImages options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\nimages\n-\naliases\n-\nupdate\n(\nlocal\n,\n \nalias-name\n,\n \n[\n\n    \ndescription\n \n=\n \nNew description\n,\n\n    \ntarget\n \n=\n \nimage fingerprint\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nRename\n\n\nRename an image alias.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nAlias name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nImages options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\nimages\n-\naliases\n-\nrename\n(\nlocal\n,\n \nalias-name\n,\n \n[\n\n    \nname\n:\n \nnew-name\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nDelete\n\n\nDelete an image alias.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nname\n\n\nAlias name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\nimages\n-\naliases\n-\ndelete\n(\nlocal\n,\n \nalias-name\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}", 
            "title": "Aliases"
        }, 
        {
            "location": "/aliases/#list", 
            "text": "List image aliases  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    mutator  function  Mutation function      $client - lxd - images - aliases - list ( local );   Response  [ \n     /1.0/images/aliases/alias-name  ]", 
            "title": "List"
        }, 
        {
            "location": "/aliases/#info", 
            "text": "Get image alias information.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Alias name     mutator  function  Mutation function      $client - lxd - images - aliases - info ( local ,   alias-name );   Response  { \n     description :   The alias description , \n     name :   alias-name , \n     target :   image fingerprint  }", 
            "title": "Info"
        }, 
        {
            "location": "/aliases/#create", 
            "text": "Get image alias information.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    options  object  Alias options     mutator  function  Mutation function      $client - lxd - images - aliases - create ( local ,   [ \n     description   =   The alias description , \n     target   =   image fingerprint , \n     name   =   alias-name  ]);   Response  {  }", 
            "title": "Create"
        }, 
        {
            "location": "/aliases/#replace", 
            "text": "Replace alias target or description.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Alias name     options  object  Alias options     mutator  function  Mutation function      $client - lxd - images - aliases - replace ( local ,   alias-name ,   [ \n     description   =   New description , \n     target   =   image fingerprint  ]);   Response  {  }", 
            "title": "Replace"
        }, 
        {
            "location": "/aliases/#update", 
            "text": "Update alias target or description.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Alias name     options  object  Images options     mutator  function  Mutation function      $client - lxd - images - aliases - update ( local ,   alias-name ,   [ \n     description   =   New description , \n     target   =   image fingerprint  ]);   Response  {  }", 
            "title": "Update"
        }, 
        {
            "location": "/aliases/#rename", 
            "text": "Rename an image alias.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Alias name     options  object  Images options     mutator  function  Mutation function      $client - lxd - images - aliases - rename ( local ,   alias-name ,   [ \n     name :   new-name  ]);   Response  {  }", 
            "title": "Rename"
        }, 
        {
            "location": "/aliases/#delete", 
            "text": "Delete an image alias.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  name  Alias name     mutator  function  Mutation function      $client - lxd - images - aliases - delete ( local ,   alias-name );   Response  {  }", 
            "title": "Delete"
        }, 
        {
            "location": "/certificates/", 
            "text": "Helper methods for certificates.\n\n\nList\n\n\nList client certificates.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncertificates\n-\nlist\n(\nlocal\n);\n\n\n\n\n\n\nResponse\n\n\n[\n\n    \n/1.0/certificates/33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx\n\n\n]\n\n\n\n\n\n\nAdd\n\n\nAdd client certificate.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nCertificate options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncertificates\n-\nadd\n(\nlocal\n,\n \n[\n\n    \ntype\n \n=\n \nclient\n,\n\n    \ncertificate\n \n=\n \nPEM certificate\n,\n\n    \nname\n \n=\n \nfoo\n,\n\n    \npassword\n \n=\n \nserver-trust-password\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nInfo\n\n\nGet certificate information.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nCertificate fingerprint\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncertificates\n-\ninfo\n(\nlocal\n,\n \n33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \ncertificate\n:\n \n-----BEGIN CERTIFICATE-----\\n snip \\n-----END CERTIFICATE-----\\n\n,\n\n    \nfingerprint\n:\n \n33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx\n,\n\n    \nname\n:\n \n,\n\n    \ntype\n:\n \nclient\n\n\n}\n\n\n\n\n\n\nReplace\n\n\nReplace certificate properties.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nCertificate fingerprint\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nCertificate options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncertificates\n-\nreplace\n(\nlocal\n,\n \n33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx\n,\n \n[\n\n    \ntype\n \n=\n \nclient\n,\n\n    \nname\n \n=\n \nbar\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nUpdate\n\n\nUpdate certificate properties.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nCertificate fingerprint\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nCertificate options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncertificates\n-\nupdate\n(\nlocal\n,\n \n33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx\n,\n \n[\n\n    \nname\n \n=\n \nbaz\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nDelete\n\n\nDelete a client certificate.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nCertificate fingerprint\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncertificates\n-\ndelete\n(\nlocal\n,\n \n33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}", 
            "title": "Certificates"
        }, 
        {
            "location": "/certificates/#list", 
            "text": "List client certificates.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    mutator  function  Mutation function      $client - lxd - certificates - list ( local );   Response  [ \n     /1.0/certificates/33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx  ]", 
            "title": "List"
        }, 
        {
            "location": "/certificates/#add", 
            "text": "Add client certificate.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    options  object  Certificate options     mutator  function  Mutation function      $client - lxd - certificates - add ( local ,   [ \n     type   =   client , \n     certificate   =   PEM certificate , \n     name   =   foo , \n     password   =   server-trust-password  ]);   Response  {  }", 
            "title": "Add"
        }, 
        {
            "location": "/certificates/#info", 
            "text": "Get certificate information.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Certificate fingerprint     mutator  function  Mutation function      $client - lxd - certificates - info ( local ,   33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx );   Response  { \n     certificate :   -----BEGIN CERTIFICATE-----\\n snip \\n-----END CERTIFICATE-----\\n , \n     fingerprint :   33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx , \n     name :   , \n     type :   client  }", 
            "title": "Info"
        }, 
        {
            "location": "/certificates/#replace", 
            "text": "Replace certificate properties.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Certificate fingerprint     options  object  Certificate options     mutator  function  Mutation function      $client - lxd - certificates - replace ( local ,   33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx ,   [ \n     type   =   client , \n     name   =   bar  ]);   Response  {  }", 
            "title": "Replace"
        }, 
        {
            "location": "/certificates/#update", 
            "text": "Update certificate properties.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Certificate fingerprint     options  object  Certificate options     mutator  function  Mutation function      $client - lxd - certificates - update ( local ,   33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx ,   [ \n     name   =   baz  ]);   Response  {  }", 
            "title": "Update"
        }, 
        {
            "location": "/certificates/#delete", 
            "text": "Delete a client certificate.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Certificate fingerprint     mutator  function  Mutation function      $client - lxd - certificates - delete ( local ,   33c50480212ea93c0afbb8125c280b1a66445cac64706066ade30851f54cc8bx );   Response  {  }", 
            "title": "Delete"
        }, 
        {
            "location": "/containers/", 
            "text": "Helper methods for containers.\n\n\nList\n\n\nList containers on remote.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n// apply no mutation to the response\n\n\n$client\n-\nlxd\n-\ncontainers\n-\nlist\n(\nlocal\n);\n\n\n\n// strip endpoint from result\n\n\n$client\n-\nlxd\n-\ncontainers\n-\nlist\n(\nlocal\n,\n \nfunction\n \n(\n$result\n)\n \n{\n\n    \nreturn\n \nstr_replace\n(\n/1.0/containers/\n,\n \n,\n \n$result\n);\n    \n\n});\n\n\n\n\n\n\nResponse\n\n\n[\n \n    \n/\n1.0\n/containers/my-container\n\n\n]\n\n\n\n[\n \n    \nmy-container\n\n\n]\n\n\n\n\n\n\nInfo\n\n\nGet container information.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncontainers\n-\ninfo\n(\nlocal\n,\n \nmy-container\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \narchitecture\n:\n \nx86_64\n,\n\n    \nconfig\n:\n \n{\n\n        \nimage.architecture\n:\n \namd64\n,\n\n        \nimage.description\n:\n \nubuntu 16.04 LTS amd64 (release) (20180405)\n,\n\n        \nimage.label\n:\n \nrelease\n,\n\n        \nimage.os\n:\n \nubuntu\n,\n\n        \nimage.release\n:\n \nxenial\n,\n\n        \nimage.serial\n:\n \n20180405\n,\n\n        \nimage.version\n:\n \n16.04\n,\n\n        \nvolatile.base_image\n:\n \nbe7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\n,\n\n        \nvolatile.eth0.hwaddr\n:\n \n00:16:3e:fb:89:0a\n,\n\n        \nvolatile.idmap.base\n:\n \n0\n,\n\n        \nvolatile.idmap.next\n:\n \n[{\\\nIsuid\\\n:true,\\\nIsgid\\\n:false,\\\nHostid\\\n:100000,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536},{\\\nIsuid\\\n:false,\\\nIsgid\\\n:true,\\\nHostid\\\n:100000,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536}]\n,\n\n        \nvolatile.last_state.idmap\n:\n \n[{\\\nIsuid\\\n:true,\\\nIsgid\\\n:false,\\\nHostid\\\n:100000,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536},{\\\nIsuid\\\n:false,\\\nIsgid\\\n:true,\\\nHostid\\\n:100000,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536}]\n,\n\n        \nvolatile.last_state.power\n:\n \nRUNNING\n\n    \n},\n\n    \ncreated_at\n:\n \n2018-04-08T15:41:08Z\n,\n\n    \ndescription\n:\n \n,\n\n    \ndevices\n:\n \n{},\n\n    \nephemeral\n:\n \nfalse\n,\n\n    \nexpanded_config\n:\n \n{\n\n        \nimage.architecture\n:\n \namd64\n,\n\n        \nimage.description\n:\n \nubuntu 16.04 LTS amd64 (release) (20180405)\n,\n\n        \nimage.label\n:\n \nrelease\n,\n\n        \nimage.os\n:\n \nubuntu\n,\n\n        \nimage.release\n:\n \nxenial\n,\n\n        \nimage.serial\n:\n \n20180405\n,\n\n        \nimage.version\n:\n \n16.04\n,\n\n        \nvolatile.base_image\n:\n \nbe7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\n,\n\n        \nvolatile.eth0.hwaddr\n:\n \n00:16:3e:fb:89:0a\n,\n\n        \nvolatile.idmap.base\n:\n \n0\n,\n\n        \nvolatile.idmap.next\n:\n \n[{\\\nIsuid\\\n:true,\\\nIsgid\\\n:false,\\\nHostid\\\n:100000,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536},{\\\nIsuid\\\n:false,\\\nIsgid\\\n:true,\\\nHostid\\\n:100000,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536}]\n,\n\n        \nvolatile.last_state.idmap\n:\n \n[{\\\nIsuid\\\n:true,\\\nIsgid\\\n:false,\\\nHostid\\\n:100000,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536},{\\\nIsuid\\\n:false,\\\nIsgid\\\n:true,\\\nHostid\\\n:100000,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536}]\n,\n\n        \nvolatile.last_state.power\n:\n \nRUNNING\n\n    \n},\n\n    \nexpanded_devices\n:\n \n{\n\n        \neth0\n:\n \n{\n\n            \nname\n:\n \neth0\n,\n\n            \nnictype\n:\n \nbridged\n,\n\n            \nparent\n:\n \nlxdbr0\n,\n\n            \ntype\n:\n \nnic\n\n        \n},\n\n        \nroot\n:\n \n{\n\n            \npath\n:\n \n/\n,\n\n            \npool\n:\n \ndefault\n,\n\n            \ntype\n:\n \ndisk\n\n        \n}\n\n    \n},\n\n    \nlast_used_at\n:\n \n2018-04-08T20:09:53Z\n,\n\n    \nlocation\n:\n \n,\n\n    \nname\n:\n \nmy-container\n,\n\n    \nprofiles\n:\n \n[\n\n        \ndefault\n\n    \n],\n\n    \nstateful\n:\n \nfalse\n,\n\n    \nstatus\n:\n \nRunning\n,\n\n    \nstatus_code\n:\n \n103\n\n\n}\n\n\n\n\n\n\nGet State\n\n\nGet the state of a container.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncontainers\n-\ngetState\n(\nlocal\n,\n \nmy-container\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \ncpu\n:\n \n{\n\n        \nusage\n:\n \n15159435138\n\n    \n},\n\n    \ndisk\n:\n \n{},\n\n    \nmemory\n:\n \n{\n\n        \nswap_usage\n:\n \n0\n,\n\n        \nswap_usage_peak\n:\n \n0\n,\n\n        \nusage\n:\n \n239001600\n,\n\n        \nusage_peak\n:\n \n314175488\n\n    \n},\n\n    \nnetwork\n:\n \n{\n\n        \neth0\n:\n \n{\n\n            \naddresses\n:\n \n[\n\n                \n{\n\n                    \naddress\n:\n \n10.189.110.190\n,\n\n                    \nfamily\n:\n \ninet\n,\n\n                    \nnetmask\n:\n \n24\n,\n\n                    \nscope\n:\n \nglobal\n\n                \n},\n\n                \n{\n\n                    \naddress\n:\n \nfe80::216:3eff:fefb:890a\n,\n\n                    \nfamily\n:\n \ninet6\n,\n\n                    \nnetmask\n:\n \n64\n,\n\n                    \nscope\n:\n \nlink\n\n                \n}\n\n            \n],\n\n            \ncounters\n:\n \n{\n\n                \nbytes_received\n:\n \n26351929\n,\n\n                \nbytes_sent\n:\n \n706569\n,\n\n                \npackets_received\n:\n \n18810\n,\n\n                \npackets_sent\n:\n \n10095\n\n            \n},\n\n            \nhost_name\n:\n \nvethQGS6S6\n,\n\n            \nhwaddr\n:\n \n00:16:3e:fb:89:0a\n,\n\n            \nmtu\n:\n \n1500\n,\n\n            \nstate\n:\n \nup\n,\n\n            \ntype\n:\n \nbroadcast\n\n        \n},\n\n        \nlo\n:\n \n{\n\n            \naddresses\n:\n \n[\n\n                \n{\n\n                    \naddress\n:\n \n127.0.0.1\n,\n\n                    \nfamily\n:\n \ninet\n,\n\n                    \nnetmask\n:\n \n8\n,\n\n                    \nscope\n:\n \nlocal\n\n                \n},\n\n                \n{\n\n                    \naddress\n:\n \n::1\n,\n\n                    \nfamily\n:\n \ninet6\n,\n\n                    \nnetmask\n:\n \n128\n,\n\n                    \nscope\n:\n \nlocal\n\n                \n}\n\n            \n],\n\n            \ncounters\n:\n \n{\n\n                \nbytes_received\n:\n \n0\n,\n\n                \nbytes_sent\n:\n \n0\n,\n\n                \npackets_received\n:\n \n0\n,\n\n                \npackets_sent\n:\n \n0\n\n            \n},\n\n            \nhost_name\n:\n \n,\n\n            \nhwaddr\n:\n \n,\n\n            \nmtu\n:\n \n65536\n,\n\n            \nstate\n:\n \nup\n,\n\n            \ntype\n:\n \nloopback\n\n        \n}\n\n    \n},\n\n    \npid\n:\n \n7156\n,\n\n    \nprocesses\n:\n \n30\n,\n\n    \nstatus\n:\n \nRunning\n,\n\n    \nstatus_code\n:\n \n103\n\n\n}\n\n\n\n\n\n\nSet State\n\n\nSet the state of a container on remote, this allows for more flexibility then \ncalling the (start, stop, restart, freeze, unfreeze) methods below as you can set the options parameter.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\noptions\n\n\nobject | json\n\n\nContainer state options\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncontainers\n-\nsetState\n(\nlocal\n,\n \nmy-container\n,\n \n[\n\n    \naction\n \n=\n \nstop\n,\n  \n#\n \nState\n \nchange\n \naction\n \n(\nstop\n,\n \nstart\n,\n \nrestart\n,\n \nfreeze\n \nor\n \nunfreeze\n)\n\n    \ntimeout\n \n=\n \n30\n,\n     \n#\n \nA\n \ntimeout\n \nafter\n \nwhich\n \nthe\n \nstate\n \nchange\n \nis\n \nconsidered\n \nas\n \nfailed\n\n    \nforce\n \n=\n \ntrue\n,\n     \n#\n \nForce\n \nthe\n \nstate\n \nchange\n \n(\ncurrently\n \nonly\n \nvalid\n \nfor\n \nstop\n \nand\n \nrestart\n \nwhere\n \nit\n \nmeans\n \nkilling\n \nthe\n \ncontainer\n)\n\n    \nstateful\n \n=\n \ntrue\n   \n#\n \nWhether\n \nto\n \nstore\n \nor\n \nrestore\n \nruntime\n \nstate\n \nbefore\n \nstopping\n \nor\n \nstartiong\n \n(\nonly\n \nvalid\n \nfor\n \nstop\n \nand\n \nstart\n,\n \ndefaults\n \nto\n \nfalse\n)\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \nclass:\n \ntask\n,\n\n    \ncreated_at:\n \n2018-04-08T16:37:36.511708398Z\n,\n\n    \ndescription:\n \n[Stopping,\n \nStarting,\n \nRestarting,\n \nFreezing,\n \nUnfreezing]\n \ncontainer\n,\n\n    \nerr:\n \n,\n\n    \nid:\n \n4850b25b-3a9a-4666-acf6-9f2b4c25a236\n,\n\n    \nmay_cancel:\n \nfalse,\n\n    \nmetadata:\n \nnull,\n\n    \nresources:\n \n{\n\n        \ncontainers:\n \n[\n\n            \n/1.0/containers/my-container\n\n        \n]\n\n    \n}\n,\n\n    \nstatus:\n \nRunning\n,\n\n    \nstatus_code:\n \n103\n,\n\n    \nupdated_at:\n \n2018-04-08\nT\n16\n:\n37\n:\n36.511708398\nZ\n\n\n}\n\n\n\n\n\n\nReplace\n\n\nReplaces container configuration or restore snapshot.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nContainer options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncontainers\n-\nreplace\n(\nlocal\n,\n \nmy-container\n,\n \n[\n\n    \narchitecture\n \n=\n \nx86_64\n,\n\n    \nconfig\n \n=\n  \n[\n\n        \nlimits.cpu\n \n=\n \n4\n,\n\n        \nvolatile.base_image\n \n=\n \n97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc\n,\n\n        \nvolatile.eth0.hwaddr\n \n=\n \n00:16:3e:1c:94:38\n\n    \n],\n\n    \ndevices\n \n=\n \n[\n\n        \nrootfs\n \n=\n \n[\n\n            \npath\n \n=\n \n/\n,\n\n            \ntype\n \n=\n \ndisk\n\n        \n]\n\n    \n],\n\n    \nephemeral\n \n=\n \ntrue\n,\n\n    \nprofiles\n \n=\n \n[\n\n        \ndefault\n\n    \n]\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nUpdate\n\n\nUpdate container configuration.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nContainer options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncontainers\n-\nupdate\n(\nlocal\n,\n \nmy-container\n,\n \n[\n\n    \narchitecture\n \n=\n \nx86_64\n,\n\n    \nconfig\n \n=\n  \n[\n\n        \nlimits.cpu\n \n=\n \n4\n\n    \n],\n\n    \ndevices\n \n=\n \n[\n\n        \nrootfs\n \n=\n \n[\n\n            \npath\n \n=\n \n/\n,\n\n            \ntype\n \n=\n \ndisk\n\n        \n]\n\n    \n],\n\n    \nephemeral\n \n=\n \ntrue\n,\n\n    \nprofiles\n \n=\n \n[\n\n        \ndefault\n\n    \n]\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nRename\n\n\nRename a container.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nnewName\n\n\nstring\n\n\nNew container name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncontainers\n-\nrename\n(\nlocal\n,\n \nold-name\n,\n \nnew-name\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nCreate\n\n\nCreate a container.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nThe container options\n\n\n\n\n\n\n\n\n\n\nFull container options can be found here: \nhttps://github.com/lxc/lxd/blob/master/doc/rest-api.md#post-1\n\n\n// example from local\n\n\n$client\n-\nlxd\n-\ncontainers\n-\ncreate\n(\nlocal\n,\n \n[\n\n    \nname\n \n=\n \nmy-new-container\n,\n\n    \narchitecture\n \n=\n \nx86_64\n,\n\n    \nprofiles\n \n=\n \n[\n\n        \ndefault\n\n    \n],\n\n    \nephemeral\n \n=\n \ntrue\n,\n\n    \nconfig\n \n=\n \n[\n\n        \nlimits.cpu\n \n=\n \n2\n\n    \n],\n\n    \ndevices\n \n=\n \n[],\n\n    \nsource\n \n=\n \n[\n\n        \ntype\n \n=\n \nimage\n,\n\n        \nfingerprint\n \n=\n \nbe7cec7c9489\n\n    \n]\n\n\n]);\n\n\n\n// example from https://images.linuxcontainers.org\n\n\n$client\n-\nlxd\n-\ncontainers\n-\ncreate\n(\nlocal\n,\n \n[\n\n    \nname\n \n=\n \nmy-new-container\n,\n\n    \narchitecture\n \n=\n \nx86_64\n,\n\n    \nprofiles\n \n=\n \n[\n\n        \ndefault\n\n    \n],\n\n    \nephemeral\n \n=\n \ntrue\n,\n\n    \nconfig\n \n=\n \n[\n\n        \nlimits.cpu\n \n=\n \n2\n\n    \n],\n\n    \ndevices\n \n=\n \n[],\n\n    \nsource\n \n=\n \n[\n\n        \ntype\n:\n \nimage\n,\n\n        \nmode\n:\n \npull\n,\n\n        \nserver\n:\n \nhttps://images.linuxcontainers.org:8443\n,\n\n        \nprotocol\n:\n \nsimplestreams\n,\n\n        \nalias\n:\n \nubuntu/16.04\n\n    \n]\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \nclass\n:\n \ntask\n,\n\n    \ncreated_at\n:\n \n2018-04-08T22:49:33.892947111Z\n,\n\n    \ndescription\n:\n \nCreating container\n,\n\n    \nerr\n:\n \n,\n\n    \nid\n:\n \ncfd9cd81-a651-4b9b-bd89-4667cc51ad4b\n,\n\n    \nmay_cancel\n:\n \nfalse\n,\n\n    \nmetadata\n:\n \nnull\n,\n\n    \nresources\n:\n \n{\n\n        \ncontainers\n:\n \n[\n\n            \n/1.0/containers/my-new-container\n\n        \n]\n\n    \n},\n\n    \nstatus\n:\n \nRunning\n,\n\n    \nstatus_code\n:\n \n103\n,\n\n    \nupdated_at\n:\n \n2018-04-08T22:49:33.892947111Z\n\n\n}\n\n\n\n\n\n\n*you could also simply call \nlxc.local\n()\n to run what you would normally run on cmd line:\n\n\n// same as above\n\n\n$client\n-\nlxd\n-\nlocal\n(\nlxc launch ubuntu:16.04 my-new-container\n);\n\n\n\n// launch on a remote\n\n\n$client\n-\nlxd\n-\nlocal\n(\nlxc launch ubuntu:16.04 production:my-container\n)\n\n\n\n// launch local image on a remote\n\n\n$client\n-\nlxd\n-\nlocal\n(\nlxc launch local:\nfingerprint\n production:my-container\n)\n\n\n\n// launch remote image on a remote\n\n\n$client\n-\nlxd\n-\nlocal\n(\nlxc launch staging:\nfingerprint\n production:my-container\n)\n\n\n\n\n\n\nStart\n\n\nStart a container.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncontainers\n-\nstart\n(\nlocal\n,\n \ncontainer-name\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \nclass:\n \ntask\n,\n\n    \ncreated_at:\n \n2018-04-08T16:37:36.511708398Z\n,\n\n    \ndescription:\n \nStarting\n \ncontainer\n,\n\n    \nerr:\n \n,\n\n    \nid:\n \n4850b25b-3a9a-4666-acf6-9f2b4c25a236\n,\n\n    \nmay_cancel:\n \nfalse,\n\n    \nmetadata:\n \nnull,\n\n    \nresources:\n \n{\n\n        \ncontainers:\n \n[\n\n            \n/1.0/containers/my-container\n\n        \n]\n\n    \n}\n,\n\n    \nstatus:\n \nRunning\n,\n\n    \nstatus_code:\n \n103\n,\n\n    \nupdated_at:\n \n2018-04-08\nT\n16\n:\n37\n:\n36.511708398\nZ\n\n\n}\n\n\n\n\n\n\nStop\n\n\nStop a container.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncontainers\n-\nstop\n(\nlocal\n,\n \ncontainer-name\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \nclass:\n \ntask\n,\n\n    \ncreated_at:\n \n2018-04-08T16:37:36.511708398Z\n,\n\n    \ndescription:\n \nStopping\n \ncontainer\n,\n\n    \nerr:\n \n,\n\n    \nid:\n \n4850b25b-3a9a-4666-acf6-9f2b4c25a236\n,\n\n    \nmay_cancel:\n \nfalse,\n\n    \nmetadata:\n \nnull,\n\n    \nresources:\n \n{\n\n        \ncontainers:\n \n[\n\n            \n/1.0/containers/my-container\n\n        \n]\n\n    \n}\n,\n\n    \nstatus:\n \nRunning\n,\n\n    \nstatus_code:\n \n103\n,\n\n    \nupdated_at:\n \n2018-04-08\nT\n16\n:\n37\n:\n36.511708398\nZ\n\n\n}\n\n\n\n\n\n\nRestart\n\n\nRestart a container.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncontainers\n-\nrestart\n(\nlocal\n,\n \ncontainer-name\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \nclass:\n \ntask\n,\n\n    \ncreated_at:\n \n2018-04-08T16:37:36.511708398Z\n,\n\n    \ndescription:\n \nRestarting\n \ncontainer\n,\n\n    \nerr:\n \n,\n\n    \nid:\n \n4850b25b-3a9a-4666-acf6-9f2b4c25a236\n,\n\n    \nmay_cancel:\n \nfalse,\n\n    \nmetadata:\n \nnull,\n\n    \nresources:\n \n{\n\n        \ncontainers:\n \n[\n\n            \n/1.0/containers/my-container\n\n        \n]\n\n    \n}\n,\n\n    \nstatus:\n \nRunning\n,\n\n    \nstatus_code:\n \n103\n,\n\n    \nupdated_at:\n \n2018-04-08\nT\n16\n:\n37\n:\n36.511708398\nZ\n\n\n}\n\n\n\n\n\n\nFreeze\n\n\nFreeze a container.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncontainers\n-\nfreeze\n(\nlocal\n,\n \ncontainer-name\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \nclass:\n \ntask\n,\n\n    \ncreated_at:\n \n2018-04-08T16:37:36.511708398Z\n,\n\n    \ndescription:\n \nFreezing\n \ncontainer\n,\n\n    \nerr:\n \n,\n\n    \nid:\n \n4850b25b-3a9a-4666-acf6-9f2b4c25a236\n,\n\n    \nmay_cancel:\n \nfalse,\n\n    \nmetadata:\n \nnull,\n\n    \nresources:\n \n{\n\n        \ncontainers:\n \n[\n\n            \n/1.0/containers/my-container\n\n        \n]\n\n    \n}\n,\n\n    \nstatus:\n \nRunning\n,\n\n    \nstatus_code:\n \n103\n,\n\n    \nupdated_at:\n \n2018-04-08\nT\n16\n:\n37\n:\n36.511708398\nZ\n\n\n}\n\n\n\n\n\n\nUnfreeze\n\n\nUnfreeze a container.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nThe container name\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncontainers\n-\nunfreeze\n(\nlocal\n,\n \ncontainer-name\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \nclass:\n \ntask\n,\n\n    \ncreated_at:\n \n2018-04-08T16:37:36.511708398Z\n,\n\n    \ndescription:\n \nThawing\n \ncontainer\n,\n\n    \nerr:\n \n,\n\n    \nid:\n \n4850b25b-3a9a-4666-acf6-9f2b4c25a236\n,\n\n    \nmay_cancel:\n \nfalse,\n\n    \nmetadata:\n \nnull,\n\n    \nresources:\n \n{\n\n        \ncontainers:\n \n[\n\n            \n/1.0/containers/my-container\n\n        \n]\n\n    \n}\n,\n\n    \nstatus:\n \nRunning\n,\n\n    \nstatus_code:\n \n103\n,\n\n    \nupdated_at:\n \n2018-04-08\nT\n16\n:\n37\n:\n36.511708398\nZ\n\n\n}\n\n\n\n\n\n\nDelete\n\n\nDelete a container.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncontainers\n-\ndelete\n(\nlocal\n,\n \ncontainer-name\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nExec\n\n\nRun a command in container.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nThe container options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client\n-\nlxd\n-\ncontainers\n-\nexec\n(\nlocal\n,\n \ncontainer-name\n,\n \n[\n\n    \ncommand\n \n=\n \n[\n/bin/bash\n],\n\n    \nenvironment\n \n=\n \n[],\n\n    \nwait-for-websocket\n \n=\n \nfalse\n,\n\n    \nrecord-output\n \n=\n \nfalse\n,\n\n    \ninteractive\n \n=\n \nfalse\n,\n\n    \nwidth\n \n=\n \n80\n,\n\n    \nheight\n \n=\n \n25\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \nclass\n:\n \ntask\n,\n\n    \ncreated_at\n:\n \n2018-04-16T01:58:34.642661556Z\n,\n\n    \ndescription\n:\n \nExecuting command\n,\n\n    \nerr\n:\n \n,\n\n    \nid\n:\n \nbff27d5c-f54c-4fb4-8956-60bcea56d074\n,\n\n    \nmay_cancel\n:\n \nfalse\n,\n\n    \nmetadata\n:\n \nnull\n,\n\n    \nresources\n:\n \n{\n\n        \ncontainers\n:\n \n[\n\n            \n/1.0/containers/my-container\n\n        \n]\n\n    \n},\n\n    \nstatus\n:\n \nRunning\n,\n\n    \nstatus_code\n:\n \n103\n,\n\n    \nupdated_at\n:\n \n2018-04-16T01:58:34.642661556Z\n\n\n}", 
            "title": "Containers"
        }, 
        {
            "location": "/containers/#list", 
            "text": "List containers on remote.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    mutator  function  Mutation function      // apply no mutation to the response  $client - lxd - containers - list ( local );  // strip endpoint from result  $client - lxd - containers - list ( local ,   function   ( $result )   { \n     return   str_replace ( /1.0/containers/ ,   ,   $result );      });   Response  [  \n     / 1.0 /containers/my-container  ]  [  \n     my-container  ]", 
            "title": "List"
        }, 
        {
            "location": "/containers/#info", 
            "text": "Get container information.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Container name     mutator  function  Mutation function      $client - lxd - containers - info ( local ,   my-container );   Response  { \n     architecture :   x86_64 , \n     config :   { \n         image.architecture :   amd64 , \n         image.description :   ubuntu 16.04 LTS amd64 (release) (20180405) , \n         image.label :   release , \n         image.os :   ubuntu , \n         image.release :   xenial , \n         image.serial :   20180405 , \n         image.version :   16.04 , \n         volatile.base_image :   be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a , \n         volatile.eth0.hwaddr :   00:16:3e:fb:89:0a , \n         volatile.idmap.base :   0 , \n         volatile.idmap.next :   [{\\ Isuid\\ :true,\\ Isgid\\ :false,\\ Hostid\\ :100000,\\ Nsid\\ :0,\\ Maprange\\ :65536},{\\ Isuid\\ :false,\\ Isgid\\ :true,\\ Hostid\\ :100000,\\ Nsid\\ :0,\\ Maprange\\ :65536}] , \n         volatile.last_state.idmap :   [{\\ Isuid\\ :true,\\ Isgid\\ :false,\\ Hostid\\ :100000,\\ Nsid\\ :0,\\ Maprange\\ :65536},{\\ Isuid\\ :false,\\ Isgid\\ :true,\\ Hostid\\ :100000,\\ Nsid\\ :0,\\ Maprange\\ :65536}] , \n         volatile.last_state.power :   RUNNING \n     }, \n     created_at :   2018-04-08T15:41:08Z , \n     description :   , \n     devices :   {}, \n     ephemeral :   false , \n     expanded_config :   { \n         image.architecture :   amd64 , \n         image.description :   ubuntu 16.04 LTS amd64 (release) (20180405) , \n         image.label :   release , \n         image.os :   ubuntu , \n         image.release :   xenial , \n         image.serial :   20180405 , \n         image.version :   16.04 , \n         volatile.base_image :   be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a , \n         volatile.eth0.hwaddr :   00:16:3e:fb:89:0a , \n         volatile.idmap.base :   0 , \n         volatile.idmap.next :   [{\\ Isuid\\ :true,\\ Isgid\\ :false,\\ Hostid\\ :100000,\\ Nsid\\ :0,\\ Maprange\\ :65536},{\\ Isuid\\ :false,\\ Isgid\\ :true,\\ Hostid\\ :100000,\\ Nsid\\ :0,\\ Maprange\\ :65536}] , \n         volatile.last_state.idmap :   [{\\ Isuid\\ :true,\\ Isgid\\ :false,\\ Hostid\\ :100000,\\ Nsid\\ :0,\\ Maprange\\ :65536},{\\ Isuid\\ :false,\\ Isgid\\ :true,\\ Hostid\\ :100000,\\ Nsid\\ :0,\\ Maprange\\ :65536}] , \n         volatile.last_state.power :   RUNNING \n     }, \n     expanded_devices :   { \n         eth0 :   { \n             name :   eth0 , \n             nictype :   bridged , \n             parent :   lxdbr0 , \n             type :   nic \n         }, \n         root :   { \n             path :   / , \n             pool :   default , \n             type :   disk \n         } \n     }, \n     last_used_at :   2018-04-08T20:09:53Z , \n     location :   , \n     name :   my-container , \n     profiles :   [ \n         default \n     ], \n     stateful :   false , \n     status :   Running , \n     status_code :   103  }", 
            "title": "Info"
        }, 
        {
            "location": "/containers/#get-state", 
            "text": "Get the state of a container.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  The container name      $client - lxd - containers - getState ( local ,   my-container );   Response  { \n     cpu :   { \n         usage :   15159435138 \n     }, \n     disk :   {}, \n     memory :   { \n         swap_usage :   0 , \n         swap_usage_peak :   0 , \n         usage :   239001600 , \n         usage_peak :   314175488 \n     }, \n     network :   { \n         eth0 :   { \n             addresses :   [ \n                 { \n                     address :   10.189.110.190 , \n                     family :   inet , \n                     netmask :   24 , \n                     scope :   global \n                 }, \n                 { \n                     address :   fe80::216:3eff:fefb:890a , \n                     family :   inet6 , \n                     netmask :   64 , \n                     scope :   link \n                 } \n             ], \n             counters :   { \n                 bytes_received :   26351929 , \n                 bytes_sent :   706569 , \n                 packets_received :   18810 , \n                 packets_sent :   10095 \n             }, \n             host_name :   vethQGS6S6 , \n             hwaddr :   00:16:3e:fb:89:0a , \n             mtu :   1500 , \n             state :   up , \n             type :   broadcast \n         }, \n         lo :   { \n             addresses :   [ \n                 { \n                     address :   127.0.0.1 , \n                     family :   inet , \n                     netmask :   8 , \n                     scope :   local \n                 }, \n                 { \n                     address :   ::1 , \n                     family :   inet6 , \n                     netmask :   128 , \n                     scope :   local \n                 } \n             ], \n             counters :   { \n                 bytes_received :   0 , \n                 bytes_sent :   0 , \n                 packets_received :   0 , \n                 packets_sent :   0 \n             }, \n             host_name :   , \n             hwaddr :   , \n             mtu :   65536 , \n             state :   up , \n             type :   loopback \n         } \n     }, \n     pid :   7156 , \n     processes :   30 , \n     status :   Running , \n     status_code :   103  }", 
            "title": "Get State"
        }, 
        {
            "location": "/containers/#set-state", 
            "text": "Set the state of a container on remote, this allows for more flexibility then \ncalling the (start, stop, restart, freeze, unfreeze) methods below as you can set the options parameter.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  The container name     options  object | json  Container state options      $client - lxd - containers - setState ( local ,   my-container ,   [ \n     action   =   stop ,    #   State   change   action   ( stop ,   start ,   restart ,   freeze   or   unfreeze ) \n     timeout   =   30 ,       #   A   timeout   after   which   the   state   change   is   considered   as   failed \n     force   =   true ,       #   Force   the   state   change   ( currently   only   valid   for   stop   and   restart   where   it   means   killing   the   container ) \n     stateful   =   true     #   Whether   to   store   or   restore   runtime   state   before   stopping   or   startiong   ( only   valid   for   stop   and   start ,   defaults   to   false )  ]);   Response  { \n     class:   task , \n     created_at:   2018-04-08T16:37:36.511708398Z , \n     description:   [Stopping,   Starting,   Restarting,   Freezing,   Unfreezing]   container , \n     err:   , \n     id:   4850b25b-3a9a-4666-acf6-9f2b4c25a236 , \n     may_cancel:   false, \n     metadata:   null, \n     resources:   { \n         containers:   [ \n             /1.0/containers/my-container \n         ] \n     } , \n     status:   Running , \n     status_code:   103 , \n     updated_at:   2018-04-08 T 16 : 37 : 36.511708398 Z  }", 
            "title": "Set State"
        }, 
        {
            "location": "/containers/#replace", 
            "text": "Replaces container configuration or restore snapshot.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Container name     options  object  Container options     mutator  function  Mutation function      $client - lxd - containers - replace ( local ,   my-container ,   [ \n     architecture   =   x86_64 , \n     config   =    [ \n         limits.cpu   =   4 , \n         volatile.base_image   =   97d97a3d1d053840ca19c86cdd0596cf1be060c5157d31407f2a4f9f350c78cc , \n         volatile.eth0.hwaddr   =   00:16:3e:1c:94:38 \n     ], \n     devices   =   [ \n         rootfs   =   [ \n             path   =   / , \n             type   =   disk \n         ] \n     ], \n     ephemeral   =   true , \n     profiles   =   [ \n         default \n     ]  ]);   Response  {  }", 
            "title": "Replace"
        }, 
        {
            "location": "/containers/#update", 
            "text": "Update container configuration.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Container name     options  object  Container options     mutator  function  Mutation function      $client - lxd - containers - update ( local ,   my-container ,   [ \n     architecture   =   x86_64 , \n     config   =    [ \n         limits.cpu   =   4 \n     ], \n     devices   =   [ \n         rootfs   =   [ \n             path   =   / , \n             type   =   disk \n         ] \n     ], \n     ephemeral   =   true , \n     profiles   =   [ \n         default \n     ]  ]);   Response  {  }", 
            "title": "Update"
        }, 
        {
            "location": "/containers/#rename", 
            "text": "Rename a container.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Container name     newName  string  New container name     mutator  function  Mutation function      $client - lxd - containers - rename ( local ,   old-name ,   new-name );   Response  {  }", 
            "title": "Rename"
        }, 
        {
            "location": "/containers/#create", 
            "text": "Create a container.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    options  object  The container options      Full container options can be found here:  https://github.com/lxc/lxd/blob/master/doc/rest-api.md#post-1  // example from local  $client - lxd - containers - create ( local ,   [ \n     name   =   my-new-container , \n     architecture   =   x86_64 , \n     profiles   =   [ \n         default \n     ], \n     ephemeral   =   true , \n     config   =   [ \n         limits.cpu   =   2 \n     ], \n     devices   =   [], \n     source   =   [ \n         type   =   image , \n         fingerprint   =   be7cec7c9489 \n     ]  ]);  // example from https://images.linuxcontainers.org  $client - lxd - containers - create ( local ,   [ \n     name   =   my-new-container , \n     architecture   =   x86_64 , \n     profiles   =   [ \n         default \n     ], \n     ephemeral   =   true , \n     config   =   [ \n         limits.cpu   =   2 \n     ], \n     devices   =   [], \n     source   =   [ \n         type :   image , \n         mode :   pull , \n         server :   https://images.linuxcontainers.org:8443 , \n         protocol :   simplestreams , \n         alias :   ubuntu/16.04 \n     ]  ]);   Response  { \n     class :   task , \n     created_at :   2018-04-08T22:49:33.892947111Z , \n     description :   Creating container , \n     err :   , \n     id :   cfd9cd81-a651-4b9b-bd89-4667cc51ad4b , \n     may_cancel :   false , \n     metadata :   null , \n     resources :   { \n         containers :   [ \n             /1.0/containers/my-new-container \n         ] \n     }, \n     status :   Running , \n     status_code :   103 , \n     updated_at :   2018-04-08T22:49:33.892947111Z  }   *you could also simply call  lxc.local ()  to run what you would normally run on cmd line:  // same as above  $client - lxd - local ( lxc launch ubuntu:16.04 my-new-container );  // launch on a remote  $client - lxd - local ( lxc launch ubuntu:16.04 production:my-container )  // launch local image on a remote  $client - lxd - local ( lxc launch local: fingerprint  production:my-container )  // launch remote image on a remote  $client - lxd - local ( lxc launch staging: fingerprint  production:my-container )", 
            "title": "Create"
        }, 
        {
            "location": "/containers/#start", 
            "text": "Start a container.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  The container name      $client - lxd - containers - start ( local ,   container-name );   Response  { \n     class:   task , \n     created_at:   2018-04-08T16:37:36.511708398Z , \n     description:   Starting   container , \n     err:   , \n     id:   4850b25b-3a9a-4666-acf6-9f2b4c25a236 , \n     may_cancel:   false, \n     metadata:   null, \n     resources:   { \n         containers:   [ \n             /1.0/containers/my-container \n         ] \n     } , \n     status:   Running , \n     status_code:   103 , \n     updated_at:   2018-04-08 T 16 : 37 : 36.511708398 Z  }", 
            "title": "Start"
        }, 
        {
            "location": "/containers/#stop", 
            "text": "Stop a container.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  The container name      $client - lxd - containers - stop ( local ,   container-name );   Response  { \n     class:   task , \n     created_at:   2018-04-08T16:37:36.511708398Z , \n     description:   Stopping   container , \n     err:   , \n     id:   4850b25b-3a9a-4666-acf6-9f2b4c25a236 , \n     may_cancel:   false, \n     metadata:   null, \n     resources:   { \n         containers:   [ \n             /1.0/containers/my-container \n         ] \n     } , \n     status:   Running , \n     status_code:   103 , \n     updated_at:   2018-04-08 T 16 : 37 : 36.511708398 Z  }", 
            "title": "Stop"
        }, 
        {
            "location": "/containers/#restart", 
            "text": "Restart a container.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  The container name      $client - lxd - containers - restart ( local ,   container-name );   Response  { \n     class:   task , \n     created_at:   2018-04-08T16:37:36.511708398Z , \n     description:   Restarting   container , \n     err:   , \n     id:   4850b25b-3a9a-4666-acf6-9f2b4c25a236 , \n     may_cancel:   false, \n     metadata:   null, \n     resources:   { \n         containers:   [ \n             /1.0/containers/my-container \n         ] \n     } , \n     status:   Running , \n     status_code:   103 , \n     updated_at:   2018-04-08 T 16 : 37 : 36.511708398 Z  }", 
            "title": "Restart"
        }, 
        {
            "location": "/containers/#freeze", 
            "text": "Freeze a container.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  The container name      $client - lxd - containers - freeze ( local ,   container-name );   Response  { \n     class:   task , \n     created_at:   2018-04-08T16:37:36.511708398Z , \n     description:   Freezing   container , \n     err:   , \n     id:   4850b25b-3a9a-4666-acf6-9f2b4c25a236 , \n     may_cancel:   false, \n     metadata:   null, \n     resources:   { \n         containers:   [ \n             /1.0/containers/my-container \n         ] \n     } , \n     status:   Running , \n     status_code:   103 , \n     updated_at:   2018-04-08 T 16 : 37 : 36.511708398 Z  }", 
            "title": "Freeze"
        }, 
        {
            "location": "/containers/#unfreeze", 
            "text": "Unfreeze a container.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  The container name      $client - lxd - containers - unfreeze ( local ,   container-name );   Response  { \n     class:   task , \n     created_at:   2018-04-08T16:37:36.511708398Z , \n     description:   Thawing   container , \n     err:   , \n     id:   4850b25b-3a9a-4666-acf6-9f2b4c25a236 , \n     may_cancel:   false, \n     metadata:   null, \n     resources:   { \n         containers:   [ \n             /1.0/containers/my-container \n         ] \n     } , \n     status:   Running , \n     status_code:   103 , \n     updated_at:   2018-04-08 T 16 : 37 : 36.511708398 Z  }", 
            "title": "Unfreeze"
        }, 
        {
            "location": "/containers/#delete", 
            "text": "Delete a container.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Container name     mutator  function  Mutation function      $client - lxd - containers - delete ( local ,   container-name );   Response  {  }", 
            "title": "Delete"
        }, 
        {
            "location": "/containers/#exec", 
            "text": "Run a command in container.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Container name     options  object  The container options     mutator  function  Mutation function      $client - lxd - containers - exec ( local ,   container-name ,   [ \n     command   =   [ /bin/bash ], \n     environment   =   [], \n     wait-for-websocket   =   false , \n     record-output   =   false , \n     interactive   =   false , \n     width   =   80 , \n     height   =   25  ]);   Response  { \n     class :   task , \n     created_at :   2018-04-16T01:58:34.642661556Z , \n     description :   Executing command , \n     err :   , \n     id :   bff27d5c-f54c-4fb4-8956-60bcea56d074 , \n     may_cancel :   false , \n     metadata :   null , \n     resources :   { \n         containers :   [ \n             /1.0/containers/my-container \n         ] \n     }, \n     status :   Running , \n     status_code :   103 , \n     updated_at :   2018-04-16T01:58:34.642661556Z  }", 
            "title": "Exec"
        }, 
        {
            "location": "/files/", 
            "text": "Helper methods for files.\n\n\nList\n\n\nList files and directories in a container.\n\n\nNote:\n Does not work for listing \nfile contents\n unless your using LXD \n 3.0.0, \nso should be used only to list directories, see pull method below on how to \nfetch them.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\nContainer directory path\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\ncontainers-\nfiles-\nlist(\nlocal\n, \ncontainer-name\n, \n/\n);\n\n\n\n\n\n\nResponse\n\n\n[\n\n    \nproc\n,\n\n    \nusr\n,\n\n    \nrun\n,\n\n    \netc\n,\n\n    \nhome\n,\n\n    \nsbin\n,\n\n    \nsnap\n,\n\n    \nopt\n,\n\n    \nlib64\n,\n\n    \nboot\n,\n\n    \nroot\n,\n\n    \nmedia\n,\n\n    \nlib\n,\n\n    \nsys\n,\n\n    \nbin\n,\n\n    \nmnt\n,\n\n    \nvar\n,\n\n    \ntmp\n,\n\n    \nsrv\n,\n\n    \ndev\n\n\n]\n\n\n\n\n\n\nPush\n\n\nUpload files or folders into the container.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nsource\n\n\nstring\n\n\nLocal file/folder path\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\nContainer file path\n\n\n\n\n\n\n\n\n\n\n\n    Note: If both the \nsource\n and the \npath\n parameters are folders, the method will\n    recursively upload, otherwise it will set mode \n755\n if folder or \n644\n if file.\n    All files are uploaded as uid/gid root user.\n\n\n\n// single file\n\n\n$client-\nlxd-\ncontainers-\nfiles-\npush(\nlocal\n, \nmy-container\n, \n/local/path/to/file.ext\n, \n/path/to/file.ext\n);\n\n\n\n// entire directory\n\n\n$client-\nlxd-\ncontainers-\nfiles-\npush(\nlocal\n, \nmy-container\n, \n/local/path/to/folder\n, \n/path/to/folder\n);\n\n\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nPull\n\n\nDownload a file from the container.\n\n\nNote:\n We use \nlxc file pull\n as there is a bug which prevents accessing the file with \nfiles endpoint though \nlxc query\n. Its fixed in LXD \n 3.0.0, so will be converted \nto use that in future.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\nContainer file path\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\ncontainers-\nfiles-\npull(\nlocal\n, \nmy-container\n, \n/path/to/file\n);\n\n\n\n\n\n\n\n    Because with \nfile pull\n you cant output to stdout, we need to pull the file then \ncat\n it,\n    so a folder structure is created based upon the path.\n\n\n\nExample above would create: \n./.files/local/my-container/path/to/file\n\n\nResponse\n\n\nThe file contents", 
            "title": "Files"
        }, 
        {
            "location": "/files/#list", 
            "text": "List files and directories in a container.  Note:  Does not work for listing  file contents  unless your using LXD   3.0.0, \nso should be used only to list directories, see pull method below on how to \nfetch them.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     path  string  Container directory path     mutator  function  Mutation function      $client- lxd- containers- files- list( local ,  container-name ,  / );   Response  [ \n     proc , \n     usr , \n     run , \n     etc , \n     home , \n     sbin , \n     snap , \n     opt , \n     lib64 , \n     boot , \n     root , \n     media , \n     lib , \n     sys , \n     bin , \n     mnt , \n     var , \n     tmp , \n     srv , \n     dev  ]", 
            "title": "List"
        }, 
        {
            "location": "/files/#push", 
            "text": "Upload files or folders into the container.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     source  string  Local file/folder path     path  string  Container file path      \n    Note: If both the  source  and the  path  parameters are folders, the method will\n    recursively upload, otherwise it will set mode  755  if folder or  644  if file.\n    All files are uploaded as uid/gid root user.  // single file  $client- lxd- containers- files- push( local ,  my-container ,  /local/path/to/file.ext ,  /path/to/file.ext );  // entire directory  $client- lxd- containers- files- push( local ,  my-container ,  /local/path/to/folder ,  /path/to/folder );   Response", 
            "title": "Push"
        }, 
        {
            "location": "/files/#pull", 
            "text": "Download a file from the container.  Note:  We use  lxc file pull  as there is a bug which prevents accessing the file with \nfiles endpoint though  lxc query . Its fixed in LXD   3.0.0, so will be converted \nto use that in future.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     path  string  Container file path      $client- lxd- containers- files- pull( local ,  my-container ,  /path/to/file );   \n    Because with  file pull  you cant output to stdout, we need to pull the file then  cat  it,\n    so a folder structure is created based upon the path.  Example above would create:  ./.files/local/my-container/path/to/file  Response  The file contents", 
            "title": "Pull"
        }, 
        {
            "location": "/images/", 
            "text": "Helper methods for image.\n\n\nList\n\n\nList images on remote.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfilter\n\n\nstring\n\n\nImage property based filtering\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\nimages-\nlist(\nimages\n);\n\n\n\n// filtering by architecture\n\n\n$client-\nlxd-\nimages-\nlist(\nimages\n, \narchitecture=\n.implode(\n|\n, [\nx86_64\n, \ni686\n, \namd64\n]).\n);\n\n\n\n\n\n\nResponse\n\n\n[\n\n    \n{\n\n        \nauto_update\n:\n \nfalse\n,\n\n        \nproperties\n:\n \n{\n\n            \narchitecture\n:\n \namd64\n,\n\n            \ndescription\n:\n \nAlpine 3.4 amd64 (20180419_17:50)\n,\n\n            \nos\n:\n \nAlpine\n,\n\n            \nrelease\n:\n \n3.4\n,\n\n            \nserial\n:\n \n20180419_17:50\n\n        \n},\n\n        \npublic\n:\n \ntrue\n,\n\n        \naliases\n:\n \n[\n\n            \n{\n\n                \nname\n:\n \nalpine/3.4/default\n,\n\n                \ndescription\n:\n \n\n            \n},\n\n            \n{\n\n                \nname\n:\n \nalpine/3.4/default/amd64\n,\n\n                \ndescription\n:\n \n\n            \n},\n\n            \n{\n\n                \nname\n:\n \nalpine/3.4\n,\n\n                \ndescription\n:\n \n\n            \n},\n\n            \n{\n\n                \nname\n:\n \nalpine/3.4/amd64\n,\n\n                \ndescription\n:\n \n\n            \n}\n\n        \n],\n\n        \narchitecture\n:\n \nx86_64\n,\n\n        \ncached\n:\n \nfalse\n,\n\n        \nfilename\n:\n \nlxd.tar.xz\n,\n\n        \nfingerprint\n:\n \nca571b2780652ccd1a5c7fa62da452db0d5e94557647e760c57d10ccd4369721\n,\n\n        \nsize\n:\n \n2134616\n,\n\n        \ncreated_at\n:\n \n2018-04-19T00:00:00Z\n,\n\n        \nexpires_at\n:\n \n1970-01-01T00:00:00Z\n,\n\n        \nlast_used_at\n:\n \n0001-01-01T00:00:00Z\n,\n\n        \nuploaded_at\n:\n \n2018-04-19T00:00:00Z\n\n    \n},\n\n\n    \n...\n \nsnip\n\n\n]\n\n\n\n\n\n\nInfo\n\n\nGet image information.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nImage fingerprint\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\nimages-\ninfo(\nlocal\n, \nbe7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \naliases\n:\n \n[],\n\n    \narchitecture\n:\n \nx86_64\n,\n\n    \nauto_update\n:\n \ntrue\n,\n\n    \ncached\n:\n \ntrue\n,\n\n    \ncreated_at\n:\n \n2018-04-05T00:00:00Z\n,\n\n    \nexpires_at\n:\n \n2021-04-21T00:00:00Z\n,\n\n    \nfilename\n:\n \nubuntu-16.04-server-cloudimg-amd64-lxd.tar.xz\n,\n\n    \nfingerprint\n:\n \nbe7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\n,\n\n    \nlast_used_at\n:\n \n2018-04-08T22:49:34Z\n,\n\n    \nproperties\n:\n \n{\n\n        \narchitecture\n:\n \namd64\n,\n\n        \ndescription\n:\n \nubuntu 16.04 LTS amd64 (release) (20180405)\n,\n\n        \nlabel\n:\n \nrelease\n,\n\n        \nos\n:\n \nubuntu\n,\n\n        \nrelease\n:\n \nxenial\n,\n\n        \nserial\n:\n \n20180405\n,\n\n        \nversion\n:\n \n16.04\n\n    \n},\n\n    \npublic\n:\n \nfalse\n,\n\n    \nsize\n:\n \n163857160\n,\n\n    \nupdate_source\n:\n \n{\n\n        \nalias\n:\n \n16.04\n,\n\n        \ncertificate\n:\n \n,\n\n        \nprotocol\n:\n \nsimplestreams\n,\n\n        \nserver\n:\n \nhttps://cloud-images.ubuntu.com/releases\n\n    \n},\n\n    \nuploaded_at\n:\n \n2018-04-08T15:41:08Z\n\n\n}\n\n\n\n\n\n\nReplace\n\n\nReplace image properties, update information and visibility.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nImage fingerprint\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nImages options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\nimages-\nreplace(\nlocal\n, \nbe7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\n, [\n\n\n    \nauto_update\n =\n true,\n\n\n    \nproperties\n =\n [\n\n\n        \narchitecture\n =\n \nx86_64\n,\n\n\n        \ndescription\n =\n \nUbuntu 16.04 LTS server (20160201)\n,\n\n\n        \nos\n =\n \nubuntu\n,\n\n\n        \nrelease\n =\n \ntrusty\n\n\n    ],\n\n\n    \npublic\n =\n true\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nUpdate\n\n\nUpdate image properties, update information and visibility.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nImage fingerprint\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nImages options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\nimages-\nupdate(\nlocal\n, \nbe7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\n, [\n\n\n    \nauto_update\n =\n true,\n\n\n    \nproperties\n =\n [\n\n\n        \narchitecture\n =\n \nx86_64\n,\n\n\n        \ndescription\n =\n \nUbuntu 16.04 LTS server (20160201)\n,\n\n\n        \nos\n =\n \nubuntu\n,\n\n\n        \nrelease\n =\n \ntrusty\n\n\n    ],\n\n\n    \npublic\n =\n true\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nDelete\n\n\nDelete an image.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nfingerprint\n\n\nstring\n\n\nImage fingerprint\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\nimages-\nupdate(\nlocal\n, \nbe7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}", 
            "title": "Images"
        }, 
        {
            "location": "/images/#list", 
            "text": "List images on remote.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    filter  string  Image property based filtering      $client- lxd- images- list( images );  // filtering by architecture  $client- lxd- images- list( images ,  architecture= .implode( | , [ x86_64 ,  i686 ,  amd64 ]). );   Response  [ \n     { \n         auto_update :   false , \n         properties :   { \n             architecture :   amd64 , \n             description :   Alpine 3.4 amd64 (20180419_17:50) , \n             os :   Alpine , \n             release :   3.4 , \n             serial :   20180419_17:50 \n         }, \n         public :   true , \n         aliases :   [ \n             { \n                 name :   alpine/3.4/default , \n                 description :   \n             }, \n             { \n                 name :   alpine/3.4/default/amd64 , \n                 description :   \n             }, \n             { \n                 name :   alpine/3.4 , \n                 description :   \n             }, \n             { \n                 name :   alpine/3.4/amd64 , \n                 description :   \n             } \n         ], \n         architecture :   x86_64 , \n         cached :   false , \n         filename :   lxd.tar.xz , \n         fingerprint :   ca571b2780652ccd1a5c7fa62da452db0d5e94557647e760c57d10ccd4369721 , \n         size :   2134616 , \n         created_at :   2018-04-19T00:00:00Z , \n         expires_at :   1970-01-01T00:00:00Z , \n         last_used_at :   0001-01-01T00:00:00Z , \n         uploaded_at :   2018-04-19T00:00:00Z \n     }, \n\n     ...   snip  ]", 
            "title": "List"
        }, 
        {
            "location": "/images/#info", 
            "text": "Get image information.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Image fingerprint     mutator  function  Mutation function      $client- lxd- images- info( local ,  be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a );   Response  { \n     aliases :   [], \n     architecture :   x86_64 , \n     auto_update :   true , \n     cached :   true , \n     created_at :   2018-04-05T00:00:00Z , \n     expires_at :   2021-04-21T00:00:00Z , \n     filename :   ubuntu-16.04-server-cloudimg-amd64-lxd.tar.xz , \n     fingerprint :   be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a , \n     last_used_at :   2018-04-08T22:49:34Z , \n     properties :   { \n         architecture :   amd64 , \n         description :   ubuntu 16.04 LTS amd64 (release) (20180405) , \n         label :   release , \n         os :   ubuntu , \n         release :   xenial , \n         serial :   20180405 , \n         version :   16.04 \n     }, \n     public :   false , \n     size :   163857160 , \n     update_source :   { \n         alias :   16.04 , \n         certificate :   , \n         protocol :   simplestreams , \n         server :   https://cloud-images.ubuntu.com/releases \n     }, \n     uploaded_at :   2018-04-08T15:41:08Z  }", 
            "title": "Info"
        }, 
        {
            "location": "/images/#replace", 
            "text": "Replace image properties, update information and visibility.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Image fingerprint     options  object  Images options     mutator  function  Mutation function      $client- lxd- images- replace( local ,  be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a , [       auto_update  =  true,       properties  =  [           architecture  =   x86_64 ,           description  =   Ubuntu 16.04 LTS server (20160201) ,           os  =   ubuntu ,           release  =   trusty      ],       public  =  true  ]);   Response  {  }", 
            "title": "Replace"
        }, 
        {
            "location": "/images/#update", 
            "text": "Update image properties, update information and visibility.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Image fingerprint     options  object  Images options     mutator  function  Mutation function      $client- lxd- images- update( local ,  be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a , [       auto_update  =  true,       properties  =  [           architecture  =   x86_64 ,           description  =   Ubuntu 16.04 LTS server (20160201) ,           os  =   ubuntu ,           release  =   trusty      ],       public  =  true  ]);   Response  {  }", 
            "title": "Update"
        }, 
        {
            "location": "/images/#delete", 
            "text": "Delete an image.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    fingerprint  string  Image fingerprint     mutator  function  Mutation function      $client- lxd- images- update( local ,  be7cec7c948958adfbb9bc7dbd292762d2388cc883466815fc2b6bc06bf06f5a );   Response  {  }", 
            "title": "Delete"
        }, 
        {
            "location": "/logs/", 
            "text": "Helper methods for container logs.\n\n\nList\n\n\nReturns a list of the log files available for this container. \n\n\nNote:\n This works on containers that have been deleted (or were never created) \nto enable you to get logs for failed creations.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\ncontainers-\nlogs-\nlist(\nlocal\n, \nmy-container\n);\n\n\n\n\n\n\nResponse\n\n\n[\n\n    \n/1.0/containers/my-container/logs/forkstart.log\n,\n\n    \n/1.0/containers/my-container/logs/lxc.conf\n,\n\n    \n/1.0/containers/my-container/logs/lxc.log\n\n\n]\n\n\n\n\n\n\nGet\n\n\nReturns the contents of a particular log file. \n\n\nNote:\n This method ONLY works with LXD \n 3.0.0\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nlogfile\n\n\nstring\n\n\nContainer logfile\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\ncontainers-\nlogs-\nget(\nlocal\n, \nmy-container\n, \nlxc.conf\n);\n\n\n\n\n\n\nResponse\n\n\nThe log file contents\n\n\n\n\n\nDelete\n\n\nDelete a particular log file.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nlogfile\n\n\nstring\n\n\nContainer logfile\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\ncontainers-\nlogs-\ndelete(\nlocal\n, \nmy-container\n, \nlxc.conf\n);\n\n\n\n\n\n\nResponse", 
            "title": "Logs"
        }, 
        {
            "location": "/logs/#list", 
            "text": "Returns a list of the log files available for this container.   Note:  This works on containers that have been deleted (or were never created) \nto enable you to get logs for failed creations.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     mutator  function  Mutation function      $client- lxd- containers- logs- list( local ,  my-container );   Response  [ \n     /1.0/containers/my-container/logs/forkstart.log , \n     /1.0/containers/my-container/logs/lxc.conf , \n     /1.0/containers/my-container/logs/lxc.log  ]", 
            "title": "List"
        }, 
        {
            "location": "/logs/#get", 
            "text": "Returns the contents of a particular log file.   Note:  This method ONLY works with LXD   3.0.0  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     logfile  string  Container logfile     mutator  function  Mutation function      $client- lxd- containers- logs- get( local ,  my-container ,  lxc.conf );   Response  The log file contents", 
            "title": "Get"
        }, 
        {
            "location": "/logs/#delete", 
            "text": "Delete a particular log file.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     logfile  string  Container logfile     mutator  function  Mutation function      $client- lxd- containers- logs- delete( local ,  my-container ,  lxc.conf );   Response", 
            "title": "Delete"
        }, 
        {
            "location": "/metadata/", 
            "text": "Helper methods for container metadata.\n\n\nGet\n\n\nReturns the containers metadata.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\ncontainers-\nmetadata-\nget(\nlocal\n, \nmy-container\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \narchitecture\n:\n \nx86_64\n,\n\n    \ncreation_date\n:\n \n1522920368\n,\n\n    \nexpiry_date\n:\n \n0\n,\n\n    \nproperties\n:\n \n{\n\n        \narchitecture\n:\n \nx86_64\n,\n\n        \ndescription\n:\n \nUbuntu 16.04 LTS server (20180405)\n,\n\n        \nos\n:\n \nubuntu\n,\n\n        \nrelease\n:\n \nxenial\n\n    \n},\n\n    \ntemplates\n:\n \n{\n\n        \n/etc/hostname\n:\n \n{\n\n            \ncreate_only\n:\n \nfalse\n,\n\n            \nproperties\n:\n \nnull\n,\n\n            \ntemplate\n:\n \nhostname.tpl\n,\n\n            \nwhen\n:\n \n[\n\n                \ncreate\n,\n\n                \ncopy\n\n            \n]\n\n        \n},\n\n        \n/var/lib/cloud/seed/nocloud-net/meta-data\n:\n \n{\n\n            \ncreate_only\n:\n \nfalse\n,\n\n            \nproperties\n:\n \nnull\n,\n\n            \ntemplate\n:\n \ncloud-init-meta.tpl\n,\n\n            \nwhen\n:\n \n[\n\n                \ncreate\n,\n\n                \ncopy\n\n            \n]\n\n        \n},\n\n        \n/var/lib/cloud/seed/nocloud-net/network-config\n:\n \n{\n\n            \ncreate_only\n:\n \nfalse\n,\n\n            \nproperties\n:\n \nnull\n,\n\n            \ntemplate\n:\n \ncloud-init-network.tpl\n,\n\n            \nwhen\n:\n \n[\n\n                \ncreate\n,\n\n                \ncopy\n\n            \n]\n\n        \n},\n\n        \n/var/lib/cloud/seed/nocloud-net/user-data\n:\n \n{\n\n            \ncreate_only\n:\n \nfalse\n,\n\n            \nproperties\n:\n \n{\n\n                \ndefault\n:\n \n#cloud-config\\n{}\\n\n\n            \n},\n\n            \ntemplate\n:\n \ncloud-init-user.tpl\n,\n\n            \nwhen\n:\n \n[\n\n                \ncreate\n,\n\n                \ncopy\n\n            \n]\n\n        \n},\n\n        \n/var/lib/cloud/seed/nocloud-net/vendor-data\n:\n \n{\n\n            \ncreate_only\n:\n \nfalse\n,\n\n            \nproperties\n:\n \n{\n\n                \ndefault\n:\n \n#cloud-config\\n{}\\n\n\n            \n},\n\n            \ntemplate\n:\n \ncloud-init-vendor.tpl\n,\n\n            \nwhen\n:\n \n[\n\n                \ncreate\n,\n\n                \ncopy\n\n            \n]\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\nReplace\n\n\nReplace the containers metadata.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nmetadata\n\n\nstring\n\n\nContainer metadata\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\ncontainers-\nmetadata-\nreplace(\nlocal\n, \nmy-container\n, [\n\n\n    \narchitecture\n =\n \nx86_64\n,\n\n\n    \ncreation_date\n =\n 1522920368,\n\n\n    \nexpiry_date\n =\n 0,\n\n\n    \nproperties\n =\n [\n\n\n        \narchitecture\n =\n \nx86_64\n,\n\n\n        \ndescription\n =\n \nUbuntu 16.04 LTS server (20180405)\n,\n\n\n        \nos\n =\n \nubuntu\n,\n\n\n        \nrelease\n =\n \nxenial\n\n\n    ],\n\n\n    \ntemplates\n =\n [\n\n\n        \n/etc/hostname\n =\n [\n\n\n            \ncreate_only\n =\n false,\n\n\n            \nproperties\n =\n null,\n\n\n            \ntemplate\n =\n \nhostname.tpl\n,\n\n\n            \nwhen\n: [\n\n\n                \ncreate\n,\n\n\n                \ncopy\n\n\n            ]\n\n\n        ],\n\n\n        \n/var/lib/cloud/seed/nocloud-net/meta-data\n =\n [\n\n\n            \ncreate_only\n =\n false,\n\n\n            \nproperties\n =\n null,\n\n\n            \ntemplate\n =\n \ncloud-init-meta.tpl\n,\n\n\n            \nwhen\n =\n [\n\n\n                \ncreate\n,\n\n\n                \ncopy\n\n\n            ]\n\n\n        ],\n\n\n        \n/var/lib/cloud/seed/nocloud-net/network-config\n =\n [\n\n\n            \ncreate_only\n =\n false,\n\n\n            \nproperties\n =\n null,\n\n\n            \ntemplate\n =\n \ncloud-init-network.tpl\n,\n\n\n            \nwhen\n =\n [\n\n\n                \ncreate\n,\n\n\n                \ncopy\n\n\n            ]\n\n\n        ],\n\n\n        \n/var/lib/cloud/seed/nocloud-net/user-data\n =\n [\n\n\n            \ncreate_only\n =\n false,\n\n\n            \nproperties\n =\n [\n\n\n                \ndefault\n =\n \n#cloud-config\\n{}\\n\n\n\n            ],\n\n\n            \ntemplate\n =\n \ncloud-init-user.tpl\n,\n\n\n            \nwhen\n =\n [\n\n\n                \ncreate\n,\n\n\n                \ncopy\n\n\n            ]\n\n\n        ],\n\n\n        \n/var/lib/cloud/seed/nocloud-net/vendor-data\n =\n [\n\n\n            \ncreate_only\n =\n false,\n\n\n            \nproperties\n =\n [\n\n\n                \ndefault\n =\n \n#cloud-config\\n{}\\n\n\n\n            ],\n\n\n            \ntemplate\n =\n \ncloud-init-vendor.tpl\n,\n\n\n            \nwhen\n =\n [\n\n\n                \ncreate\n,\n\n\n                \ncopy\n\n\n            ]\n\n\n        ]\n\n\n    ]\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}", 
            "title": "Metadata"
        }, 
        {
            "location": "/metadata/#get", 
            "text": "Returns the containers metadata.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     mutator  function  Mutation function      $client- lxd- containers- metadata- get( local ,  my-container );   Response  { \n     architecture :   x86_64 , \n     creation_date :   1522920368 , \n     expiry_date :   0 , \n     properties :   { \n         architecture :   x86_64 , \n         description :   Ubuntu 16.04 LTS server (20180405) , \n         os :   ubuntu , \n         release :   xenial \n     }, \n     templates :   { \n         /etc/hostname :   { \n             create_only :   false , \n             properties :   null , \n             template :   hostname.tpl , \n             when :   [ \n                 create , \n                 copy \n             ] \n         }, \n         /var/lib/cloud/seed/nocloud-net/meta-data :   { \n             create_only :   false , \n             properties :   null , \n             template :   cloud-init-meta.tpl , \n             when :   [ \n                 create , \n                 copy \n             ] \n         }, \n         /var/lib/cloud/seed/nocloud-net/network-config :   { \n             create_only :   false , \n             properties :   null , \n             template :   cloud-init-network.tpl , \n             when :   [ \n                 create , \n                 copy \n             ] \n         }, \n         /var/lib/cloud/seed/nocloud-net/user-data :   { \n             create_only :   false , \n             properties :   { \n                 default :   #cloud-config\\n{}\\n \n             }, \n             template :   cloud-init-user.tpl , \n             when :   [ \n                 create , \n                 copy \n             ] \n         }, \n         /var/lib/cloud/seed/nocloud-net/vendor-data :   { \n             create_only :   false , \n             properties :   { \n                 default :   #cloud-config\\n{}\\n \n             }, \n             template :   cloud-init-vendor.tpl , \n             when :   [ \n                 create , \n                 copy \n             ] \n         } \n     }  }", 
            "title": "Get"
        }, 
        {
            "location": "/metadata/#replace", 
            "text": "Replace the containers metadata.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     metadata  string  Container metadata     mutator  function  Mutation function      $client- lxd- containers- metadata- replace( local ,  my-container , [       architecture  =   x86_64 ,       creation_date  =  1522920368,       expiry_date  =  0,       properties  =  [           architecture  =   x86_64 ,           description  =   Ubuntu 16.04 LTS server (20180405) ,           os  =   ubuntu ,           release  =   xenial      ],       templates  =  [           /etc/hostname  =  [               create_only  =  false,               properties  =  null,               template  =   hostname.tpl ,               when : [                   create ,                   copy              ]          ],           /var/lib/cloud/seed/nocloud-net/meta-data  =  [               create_only  =  false,               properties  =  null,               template  =   cloud-init-meta.tpl ,               when  =  [                   create ,                   copy              ]          ],           /var/lib/cloud/seed/nocloud-net/network-config  =  [               create_only  =  false,               properties  =  null,               template  =   cloud-init-network.tpl ,               when  =  [                   create ,                   copy              ]          ],           /var/lib/cloud/seed/nocloud-net/user-data  =  [               create_only  =  false,               properties  =  [                   default  =   #cloud-config\\n{}\\n              ],               template  =   cloud-init-user.tpl ,               when  =  [                   create ,                   copy              ]          ],           /var/lib/cloud/seed/nocloud-net/vendor-data  =  [               create_only  =  false,               properties  =  [                   default  =   #cloud-config\\n{}\\n              ],               template  =   cloud-init-vendor.tpl ,               when  =  [                   create ,                   copy              ]          ]      ]  ]);   Response  {  }", 
            "title": "Replace"
        }, 
        {
            "location": "/networks/", 
            "text": "Helper methods for networks.\n\n\nList\n\n\nList networks.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\nnetworks-\nlist(\nlocal\n);\n\n\n\n\n\n\nResponse\n\n\n[\n\n    \n/1.0/networks/lxdbr0\n,\n\n    \n/1.0/networks/lo\n\n\n]\n\n\n\n\n\n\nInfo\n\n\nGet network information.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nNetwork name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\nnetworks-\ninfo(\nlocal\n, \nlxdbr0\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \nconfig\n:\n \n{\n\n        \nipv4.address\n:\n \n10.158.250.1/24\n,\n\n        \nipv4.nat\n:\n \ntrue\n,\n\n        \nipv6.address\n:\n \nfd42:a224:5bde:20c0::1/64\n,\n\n        \nipv6.nat\n:\n \ntrue\n\n    \n},\n\n    \ndescription\n:\n \n,\n\n    \nmanaged\n:\n \ntrue\n,\n\n    \nname\n:\n \nlxdbr0\n,\n\n    \ntype\n:\n \nbridge\n,\n\n    \nused_by\n:\n \n[\n\n        \n/1.0/containers/my-container\n\n    \n]\n\n\n}\n\n\n\n\n\n\nCreate\n\n\nCreate network.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nNetwork options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\nnetworks-\ncreate(\nlocal\n, [\n\n\n    \nname\n =\n \nmy-network\n,\n\n\n    \ndescription\n =\n \nMy network\n,\n\n\n    \nconfig\n =\n [\n\n\n        \nipv4.address\n =\n \nnone\n,\n\n\n        \nipv6.address\n =\n \n2001:470:b368:4242::1/64\n,\n\n\n        \nipv6.nat\n =\n \ntrue\n\n\n    ]\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nReplace\n\n\nReplace the network information.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nNetwork name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nNetwork options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\nnetworks-\nreplace(\nlocal\n, [\n\n\n    \nconfig\n =\n [\n\n\n        \nipv4.address\n =\n \nnone\n,\n\n\n        \nipv6.address\n =\n \n2001:470:b368:4242::1/64\n,\n\n\n        \nipv6.nat\n =\n \ntrue\n\n\n    ]\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nUpdate\n\n\nUpdate the network information.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nNetwork name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nNetwork options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\nnetworks-\nupdate(\nlocal\n, [\n\n\n    \nname\n =\n \nmy-network\n,\n\n\n    \ndescription\n =\n \nMy network\n,\n\n\n    \nconfig\n =\n [\n\n\n         \ndns.mode\n =\n \ndynamic\n\n\n    ]\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nRename\n\n\nRename a network.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nNetwork name\n\n\n\n\n\n\n\n\nnewName\n\n\nstring\n\n\nNew network name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\nnetworks-\nrename(\nlocal\n, \nold-name\n, \nnew-name\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nDelete\n\n\nDelete a network.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nNetwork name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\nnetworks-\ndelete(\nlocal\n, \nnetwork-name\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}", 
            "title": "Networks"
        }, 
        {
            "location": "/networks/#list", 
            "text": "List networks.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    mutator  function  Mutation function      $client- lxd- networks- list( local );   Response  [ \n     /1.0/networks/lxdbr0 , \n     /1.0/networks/lo  ]", 
            "title": "List"
        }, 
        {
            "location": "/networks/#info", 
            "text": "Get network information.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Network name     mutator  function  Mutation function      $client- lxd- networks- info( local ,  lxdbr0 );   Response  { \n     config :   { \n         ipv4.address :   10.158.250.1/24 , \n         ipv4.nat :   true , \n         ipv6.address :   fd42:a224:5bde:20c0::1/64 , \n         ipv6.nat :   true \n     }, \n     description :   , \n     managed :   true , \n     name :   lxdbr0 , \n     type :   bridge , \n     used_by :   [ \n         /1.0/containers/my-container \n     ]  }", 
            "title": "Info"
        }, 
        {
            "location": "/networks/#create", 
            "text": "Create network.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    options  object  Network options     mutator  function  Mutation function      $client- lxd- networks- create( local , [       name  =   my-network ,       description  =   My network ,       config  =  [           ipv4.address  =   none ,           ipv6.address  =   2001:470:b368:4242::1/64 ,           ipv6.nat  =   true      ]  ]);   Response  {  }", 
            "title": "Create"
        }, 
        {
            "location": "/networks/#replace", 
            "text": "Replace the network information.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Network name     options  object  Network options     mutator  function  Mutation function      $client- lxd- networks- replace( local , [       config  =  [           ipv4.address  =   none ,           ipv6.address  =   2001:470:b368:4242::1/64 ,           ipv6.nat  =   true      ]  ]);   Response  {  }", 
            "title": "Replace"
        }, 
        {
            "location": "/networks/#update", 
            "text": "Update the network information.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Network name     options  object  Network options     mutator  function  Mutation function      $client- lxd- networks- update( local , [       name  =   my-network ,       description  =   My network ,       config  =  [            dns.mode  =   dynamic      ]  ]);   Response  {  }", 
            "title": "Update"
        }, 
        {
            "location": "/networks/#rename", 
            "text": "Rename a network.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Network name     newName  string  New network name     mutator  function  Mutation function      $client- lxd- networks- rename( local ,  old-name ,  new-name );   Response  {  }", 
            "title": "Rename"
        }, 
        {
            "location": "/networks/#delete", 
            "text": "Delete a network.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Network name     mutator  function  Mutation function      $client- lxd- networks- delete( local ,  network-name );   Response  {  }", 
            "title": "Delete"
        }, 
        {
            "location": "/operations/", 
            "text": "Helper methods for operations.\n\n\nList\n\n\nList operations on remote.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\noperations-\nlist(\nlocal\n);\n\n\n\n\n\n\nResponse\n\n\nArray\n\n\n(\n\n    \n[\nrunning\n]\n \n=\n \nArray\n\n        \n(\n\n            \n[\n0\n]\n \n=\n \n/\n1.0\n/operations/\n7613\nf\n4\na\n5-13\nf\n5-474\nf-a\n086\n-1234e7\ncc\n3\nec\n6\n\n            \n[\n1\n]\n \n=\n \n/\n1.0\n/operations/a\n8\nbe\n2\nd\n85-5\nc\n02-4266\n-b\n64\na-de\n5\nad\n97\nde\n339\n\n        \n)\n\n\n    \n[\nsuccess\n]\n \n=\n \nArray\n\n        \n(\n\n            \n[\n0\n]\n \n=\n \n/\n1.0\n/operations/e\n5\nc\n6\ncc\n49\n-b\n100-4\nd\n12\n-88e8\n-d\n0\n83949e43\nfc\n\n        \n)\n\n\n\n)\n\n\n\n\n\n\nInfo\n\n\nGet operation information.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nuuid\n\n\nstring\n\n\nOperation uuid\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\noperations-\ninfo(\nlocal\n, \n092a8755-fd90-4ce4-bf91-9f87d03fd5bc\n);\n\n\n\n\n\n\nResponse\n\n\nArray\n\n\n(\n\n    \n[\nclass\n]\n \n=\n \nwebsocket\n\n    \n[\ncreated_at\n]\n \n=\n \n2018-05-23\nT\n19\n:\n10\n:\n51.307129722\nZ\n\n    \n[\ndescription\n]\n \n=\n \nExecuting\n \ncommand\n\n    \n[\nerr\n]\n \n=\n \n    \n[\nid\n]\n \n=\n \n7613\nf\n4\na\n5-13\nf\n5-474\nf-a\n086\n-1234e7\ncc\n3\nec\n6\n\n    \n[\nmay_cancel\n]\n \n=\n \n    \n[\nmetadata\n]\n \n=\n \nArray\n\n        \n(\n\n            \n[\nfds\n]\n \n=\n \nArray\n\n                \n(\n\n                    \n[\n0\n]\n \n=\n \n6\nc\n7104e0807487790848\nc\n7265e8\nf\n5\ndcfc\n4\nfe\n9\naa\n05\nb\n18140\nf\n939\nc\n2\nc\n255480e77\na\n\n                    \n[\ncontrol\n]\n \n=\n \nb\n9e05084\ne\n48\nbd\n785816\nddd\n162242630973538\na\n2811e5\ncf\n7\na\n71\ndc\n7\nb\n4\nf\n2\nea\n116\nf\n2\n\n                \n)\n\n\n        \n)\n\n\n    \n[\nresources\n]\n \n=\n \nArray\n\n        \n(\n\n            \n[\ncontainers\n]\n \n=\n \nArray\n\n                \n(\n\n                    \n[\n0\n]\n \n=\n \n/\n1.0\n/containers/touching-clam\n\n                \n)\n\n\n        \n)\n\n\n    \n[\nstatus\n]\n \n=\n \nRunning\n\n    \n[\nstatus_code\n]\n \n=\n \n103\n\n    \n[\nupdated_at\n]\n \n=\n \n2018-05-23\nT\n19\n:\n10\n:\n51.307129722\nZ\n\n\n)\n\n\n\n\n\n\nList \n Info Example\n\n\nIf your going to list/display operations in a table, you might call both methods like the following using a mutator:\n\n\n$client-\nlxd-\noperations-\nlist(\nlocal\n, function ($result) use ($client) {\n\n\n    $return = [];\n\n\n    foreach ($result as $type =\n $operations) {\n\n\n        $return[$type] = [];\n\n\n        foreach ($operations as $operation) {\n\n\n            $row = str_replace(\n/1.0/operations/\n, \n, $operation);  \n\n\n            $return[$type][] = $client-\nlxd-\noperations-\ninfo(\nlocal\n, $row);\n\n\n        }\n\n\n    }\n\n\n    return $return;\n\n\n})\n\n\n\n\n\n\nResponse\n\n\nArray\n\n\n(\n\n    \n[\nrunning\n]\n \n=\n \nArray\n\n        \n(\n\n            \n[\n0\n]\n \n=\n \nArray\n\n                \n(\n\n                    \n[\nclass\n]\n \n=\n \nwebsocket\n\n                    \n[\ncreated_at\n]\n \n=\n \n2018-05-23\nT\n19\n:\n10\n:\n51.307129722\nZ\n\n                    \n[\ndescription\n]\n \n=\n \nExecuting\n \ncommand\n\n                    \n[\nerr\n]\n \n=\n \n                    \n[\nid\n]\n \n=\n \n7613\nf\n4\na\n5-13\nf\n5-474\nf-a\n086\n-1234e7\ncc\n3\nec\n6\n\n                    \n[\nmay_cancel\n]\n \n=\n \n                    \n[\nmetadata\n]\n \n=\n \nArray\n\n                        \n(\n\n                            \n[\nfds\n]\n \n=\n \nArray\n\n                                \n(\n\n                                    \n[\n0\n]\n \n=\n \n6\nc\n7104e0807487790848\nc\n7265e8\nf\n5\ndcfc\n4\nfe\n9\naa\n05\nb\n18140\nf\n939\nc\n2\nc\n255480e77\na\n\n                                    \n[\ncontrol\n]\n \n=\n \nb\n9e05084\ne\n48\nbd\n785816\nddd\n162242630973538\na\n2811e5\ncf\n7\na\n71\ndc\n7\nb\n4\nf\n2\nea\n116\nf\n2\n\n                                \n)\n\n\n                        \n)\n\n\n                    \n[\nresources\n]\n \n=\n \nArray\n\n                        \n(\n\n                            \n[\ncontainers\n]\n \n=\n \nArray\n\n                                \n(\n\n                                    \n[\n0\n]\n \n=\n \n/\n1.0\n/containers/my-container\n\n                                \n)\n\n\n                        \n)\n\n\n                    \n[\nstatus\n]\n \n=\n \nRunning\n\n                    \n[\nstatus_code\n]\n \n=\n \n103\n\n                    \n[\nupdated_at\n]\n \n=\n \n2018-05-23\nT\n19\n:\n10\n:\n51.307129722\nZ\n\n                \n)\n\n\n            \n[\n1\n]\n \n=\n \nArray\n\n                \n(\n\n                    \n[\nclass\n]\n \n=\n \nwebsocket\n\n                    \n[\ncreated_at\n]\n \n=\n \n2018-05-23\nT\n19\n:\n09\n:\n33.287695819\nZ\n\n                    \n[\ndescription\n]\n \n=\n \nExecuting\n \ncommand\n\n                    \n[\nerr\n]\n \n=\n \n                    \n[\nid\n]\n \n=\n \na\n8\nbe\n2\nd\n85-5\nc\n02-4266\n-b\n64\na-de\n5\nad\n97\nde\n339\n\n                    \n[\nmay_cancel\n]\n \n=\n \n                    \n[\nmetadata\n]\n \n=\n \nArray\n\n                        \n(\n\n                            \n[\nfds\n]\n \n=\n \nArray\n\n                                \n(\n\n                                    \n[\n0\n]\n \n=\n \nf\n25\nadabf\n27641\na\n58\ncf\n4\ned\n77\nba\n00645\na\n43e30\nbb\n6\nebc\n9\nb\n40653\na\n121e3\nf\n0520\nd\n302\n\n                                    \n[\ncontrol\n]\n \n=\n \n9\naa\n9\nb\n33243\nfc\n37\nd\n5\nfe\n742\ndee\n87\nafaa\n55\ned\n0677\nc\n528\nb\n12\nf\n8572\nc\n91\nd\n58403333\nf\n6\n\n                                \n)\n\n\n                        \n)\n\n\n                    \n[\nresources\n]\n \n=\n \nArray\n\n                        \n(\n\n                            \n[\ncontainers\n]\n \n=\n \nArray\n\n                                \n(\n\n                                    \n[\n0\n]\n \n=\n \n/\n1.0\n/containers/my-container\n\n                                \n)\n\n\n                        \n)\n\n\n                    \n[\nstatus\n]\n \n=\n \nRunning\n\n                    \n[\nstatus_code\n]\n \n=\n \n103\n\n                    \n[\nupdated_at\n]\n \n=\n \n2018-05-23\nT\n19\n:\n09\n:\n33.287695819\nZ\n\n                \n)\n\n\n        \n)\n\n\n    \n[\nsuccess\n]\n \n=\n \nArray\n\n        \n(\n\n            \n[\n0\n]\n \n=\n \nArray\n\n                \n(\n\n                    \n[\nclass\n]\n \n=\n \ntask\n\n                    \n[\ncreated_at\n]\n \n=\n \n2018-05-23\nT\n19\n:\n20\n:\n20.372259879\nZ\n\n                    \n[\ndescription\n]\n \n=\n \nStarting\n \ncontainer\n\n                    \n[\nerr\n]\n \n=\n \n                    \n[\nid\n]\n \n=\n \n05\na\n5\na\n0\nde-f\n47\nf\n-4929-86\nf\n1\n-817e1\ncf\n7730\nb\n\n                    \n[\nmay_cancel\n]\n \n=\n \n                    \n[\nmetadata\n]\n \n=\n \n                    \n[\nresources\n]\n \n=\n \nArray\n\n                        \n(\n\n                            \n[\ncontainers\n]\n \n=\n \nArray\n\n                                \n(\n\n                                    \n[\n0\n]\n \n=\n \n/\n1.0\n/containers/my-container\n\n                                \n)\n\n\n                        \n)\n\n\n                    \n[\nstatus\n]\n \n=\n \nSuccess\n\n                    \n[\nstatus_code\n]\n \n=\n \n200\n\n                    \n[\nupdated_at\n]\n \n=\n \n2018-05-23\nT\n19\n:\n20\n:\n20.372259879\nZ\n\n                \n)\n\n\n        \n)\n\n\n\n)\n\n\n\n\n\n\nDelete\n\n\nDelete an operation.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nuuid\n\n\nstring\n\n\nOperation uuid\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\noperations-\ndelete(\nlocal\n, \n092a8755-fd90-4ce4-bf91-9f87d03fd5bc\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nWebsocket\n\n\nWebsocket upgrading to \n/1.0/operations/\nuuid\n/websocket\n can be done by calling \n\nlxd-\ncontainers-\nexec()\n \nwith \nwait-for-websocket\n: true\n then using the operation id to directly initialise \nthe websocket connection to the LXD server using the provided secret. \n\n\nYou could still use \nlxd-\nquery()\n if you require it but you would need to \nproxy it through with websockets, for that reason, it has not been added \nas I do not want to add additional dependencies for a single endpoint.", 
            "title": "Operations"
        }, 
        {
            "location": "/operations/#list", 
            "text": "List operations on remote.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    mutator  function  Mutation function      $client- lxd- operations- list( local );   Response  Array  ( \n     [ running ]   =   Array \n         ( \n             [ 0 ]   =   / 1.0 /operations/ 7613 f 4 a 5-13 f 5-474 f-a 086 -1234e7 cc 3 ec 6 \n             [ 1 ]   =   / 1.0 /operations/a 8 be 2 d 85-5 c 02-4266 -b 64 a-de 5 ad 97 de 339 \n         ) \n\n     [ success ]   =   Array \n         ( \n             [ 0 ]   =   / 1.0 /operations/e 5 c 6 cc 49 -b 100-4 d 12 -88e8 -d 0 83949e43 fc \n         )  )", 
            "title": "List"
        }, 
        {
            "location": "/operations/#info", 
            "text": "Get operation information.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    uuid  string  Operation uuid     mutator  function  Mutation function      $client- lxd- operations- info( local ,  092a8755-fd90-4ce4-bf91-9f87d03fd5bc );   Response  Array  ( \n     [ class ]   =   websocket \n     [ created_at ]   =   2018-05-23 T 19 : 10 : 51.307129722 Z \n     [ description ]   =   Executing   command \n     [ err ]   =  \n     [ id ]   =   7613 f 4 a 5-13 f 5-474 f-a 086 -1234e7 cc 3 ec 6 \n     [ may_cancel ]   =  \n     [ metadata ]   =   Array \n         ( \n             [ fds ]   =   Array \n                 ( \n                     [ 0 ]   =   6 c 7104e0807487790848 c 7265e8 f 5 dcfc 4 fe 9 aa 05 b 18140 f 939 c 2 c 255480e77 a \n                     [ control ]   =   b 9e05084 e 48 bd 785816 ddd 162242630973538 a 2811e5 cf 7 a 71 dc 7 b 4 f 2 ea 116 f 2 \n                 ) \n\n         ) \n\n     [ resources ]   =   Array \n         ( \n             [ containers ]   =   Array \n                 ( \n                     [ 0 ]   =   / 1.0 /containers/touching-clam \n                 ) \n\n         ) \n\n     [ status ]   =   Running \n     [ status_code ]   =   103 \n     [ updated_at ]   =   2018-05-23 T 19 : 10 : 51.307129722 Z  )", 
            "title": "Info"
        }, 
        {
            "location": "/operations/#list-info-example", 
            "text": "If your going to list/display operations in a table, you might call both methods like the following using a mutator:  $client- lxd- operations- list( local , function ($result) use ($client) {      $return = [];      foreach ($result as $type =  $operations) {          $return[$type] = [];          foreach ($operations as $operation) {              $row = str_replace( /1.0/operations/ ,  , $operation);                $return[$type][] = $client- lxd- operations- info( local , $row);          }      }      return $return;  })   Response  Array  ( \n     [ running ]   =   Array \n         ( \n             [ 0 ]   =   Array \n                 ( \n                     [ class ]   =   websocket \n                     [ created_at ]   =   2018-05-23 T 19 : 10 : 51.307129722 Z \n                     [ description ]   =   Executing   command \n                     [ err ]   =  \n                     [ id ]   =   7613 f 4 a 5-13 f 5-474 f-a 086 -1234e7 cc 3 ec 6 \n                     [ may_cancel ]   =  \n                     [ metadata ]   =   Array \n                         ( \n                             [ fds ]   =   Array \n                                 ( \n                                     [ 0 ]   =   6 c 7104e0807487790848 c 7265e8 f 5 dcfc 4 fe 9 aa 05 b 18140 f 939 c 2 c 255480e77 a \n                                     [ control ]   =   b 9e05084 e 48 bd 785816 ddd 162242630973538 a 2811e5 cf 7 a 71 dc 7 b 4 f 2 ea 116 f 2 \n                                 ) \n\n                         ) \n\n                     [ resources ]   =   Array \n                         ( \n                             [ containers ]   =   Array \n                                 ( \n                                     [ 0 ]   =   / 1.0 /containers/my-container \n                                 ) \n\n                         ) \n\n                     [ status ]   =   Running \n                     [ status_code ]   =   103 \n                     [ updated_at ]   =   2018-05-23 T 19 : 10 : 51.307129722 Z \n                 ) \n\n             [ 1 ]   =   Array \n                 ( \n                     [ class ]   =   websocket \n                     [ created_at ]   =   2018-05-23 T 19 : 09 : 33.287695819 Z \n                     [ description ]   =   Executing   command \n                     [ err ]   =  \n                     [ id ]   =   a 8 be 2 d 85-5 c 02-4266 -b 64 a-de 5 ad 97 de 339 \n                     [ may_cancel ]   =  \n                     [ metadata ]   =   Array \n                         ( \n                             [ fds ]   =   Array \n                                 ( \n                                     [ 0 ]   =   f 25 adabf 27641 a 58 cf 4 ed 77 ba 00645 a 43e30 bb 6 ebc 9 b 40653 a 121e3 f 0520 d 302 \n                                     [ control ]   =   9 aa 9 b 33243 fc 37 d 5 fe 742 dee 87 afaa 55 ed 0677 c 528 b 12 f 8572 c 91 d 58403333 f 6 \n                                 ) \n\n                         ) \n\n                     [ resources ]   =   Array \n                         ( \n                             [ containers ]   =   Array \n                                 ( \n                                     [ 0 ]   =   / 1.0 /containers/my-container \n                                 ) \n\n                         ) \n\n                     [ status ]   =   Running \n                     [ status_code ]   =   103 \n                     [ updated_at ]   =   2018-05-23 T 19 : 09 : 33.287695819 Z \n                 ) \n\n         ) \n\n     [ success ]   =   Array \n         ( \n             [ 0 ]   =   Array \n                 ( \n                     [ class ]   =   task \n                     [ created_at ]   =   2018-05-23 T 19 : 20 : 20.372259879 Z \n                     [ description ]   =   Starting   container \n                     [ err ]   =  \n                     [ id ]   =   05 a 5 a 0 de-f 47 f -4929-86 f 1 -817e1 cf 7730 b \n                     [ may_cancel ]   =  \n                     [ metadata ]   =  \n                     [ resources ]   =   Array \n                         ( \n                             [ containers ]   =   Array \n                                 ( \n                                     [ 0 ]   =   / 1.0 /containers/my-container \n                                 ) \n\n                         ) \n\n                     [ status ]   =   Success \n                     [ status_code ]   =   200 \n                     [ updated_at ]   =   2018-05-23 T 19 : 20 : 20.372259879 Z \n                 ) \n\n         )  )", 
            "title": "List &amp; Info Example"
        }, 
        {
            "location": "/operations/#delete", 
            "text": "Delete an operation.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    uuid  string  Operation uuid     mutator  function  Mutation function      $client- lxd- operations- delete( local ,  092a8755-fd90-4ce4-bf91-9f87d03fd5bc );   Response  {  }", 
            "title": "Delete"
        }, 
        {
            "location": "/operations/#websocket", 
            "text": "Websocket upgrading to  /1.0/operations/ uuid /websocket  can be done by calling  lxd- containers- exec()  \nwith  wait-for-websocket : true  then using the operation id to directly initialise \nthe websocket connection to the LXD server using the provided secret.   You could still use  lxd- query()  if you require it but you would need to \nproxy it through with websockets, for that reason, it has not been added \nas I do not want to add additional dependencies for a single endpoint.", 
            "title": "Websocket"
        }, 
        {
            "location": "/profiles/", 
            "text": "Helper methods for profiles.\n\n\nList\n\n\nList profiles.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.profiles.list(\nlocal\n).then(response =\n {\n\n\n    console.log(response)\n\n\n})\n\n\n\n\n\n\nResponse\n\n\n[\n\n    \n/1.0/profiles/default\n\n\n]\n\n\n\n\n\n\nInfo\n\n\nGet profile information.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nProfile name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.profiles.info(\nlocal\n, \ndefault\n).then(response =\n {\n\n\n    console.log(response)\n\n\n})\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \nconfig\n:\n \n{},\n\n    \ndescription\n:\n \nDefault LXD profile\n,\n\n    \ndevices\n:\n \n{\n\n        \neth0\n:\n \n{\n\n            \nname\n:\n \neth0\n,\n\n            \nnictype\n:\n \nbridged\n,\n\n            \nparent\n:\n \nlxdbr0\n,\n\n            \ntype\n:\n \nnic\n\n        \n},\n\n        \nroot\n:\n \n{\n\n            \npath\n:\n \n/\n,\n\n            \npool\n:\n \ndefault\n,\n\n            \ntype\n:\n \ndisk\n\n        \n}\n\n    \n},\n\n    \nname\n:\n \ndefault\n,\n\n    \nused_by\n:\n \n[\n\n        \n/1.0/containers/my-container\n\n    \n]\n\n\n}\n\n\n\n\n\n\nCreate\n\n\nCreate profile.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nProfile options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.profiles.create(\nlocal\n, {\n\n\n    \nname\n: \nmy-new-profile\n,\n\n\n    \ndescription\n: \nSome informative description string\n,\n\n\n    \nconfig\n: {\n\n\n        \nlimits.memory\n: \n2GB\n\n\n    },\n\n\n    \ndevices\n: {\n\n\n        \nkvm\n: {\n\n\n            \ntype\n: \nunix-char\n,\n\n\n            \npath\n: \n/dev/kvm\n\n\n        }\n\n\n    }\n\n\n}).then(response =\n {\n\n\n    console.log(response)\n\n\n})\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nReplace\n\n\nReplace profile properties, update description, devices and limits.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nProfile name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nProfile options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.profiles.replace(\nlocal\n, \nmy-new-profile\n, {\n\n\n    \nconfig\n: {\n\n\n        \nlimits.memory\n: \n4GB\n\n\n    },\n\n\n    \ndescription\n: \nSome description string\n,\n\n\n    \ndevices\n: {}\n\n\n}).then(response =\n {\n\n\n    console.log(response)\n\n\n})\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nUpdate\n\n\nUpdate profile properties, update description, devices and limits.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nProfile name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nProfile options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.profiles.replace(\nlocal\n, \nmy-new-profile\n, {\n\n\n    \nconfig\n: {\n\n\n        \nlimits.memory\n: \n4GB\n\n\n    },\n\n\n    \ndescription\n: \nSome description string\n,\n\n\n    \ndevices\n: {}\n\n\n}).then(response =\n {\n\n\n    console.log(response)\n\n\n})\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nRename\n\n\nRename a profile.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nProfile name\n\n\n\n\n\n\n\n\nnewName\n\n\nstring\n\n\nNew profile name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.profiles.rename(\nlocal\n, \nold-name\n, \nnew-name\n).then(response =\n {\n\n\n    console.log(response)\n\n\n})\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nDelete\n\n\nDelete a profile.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\nname\n\n\nstring\n\n\nProfile name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\nlxc.profiles.delete(\nlocal\n, \nprofile-name\n).then(response =\n {\n\n\n    console.log(response)\n\n\n})\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}", 
            "title": "Profiles"
        }, 
        {
            "location": "/profiles/#list", 
            "text": "List profiles.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    mutator  function  Mutation function      lxc.profiles.list( local ).then(response =  {      console.log(response)  })   Response  [ \n     /1.0/profiles/default  ]", 
            "title": "List"
        }, 
        {
            "location": "/profiles/#info", 
            "text": "Get profile information.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Profile name     mutator  function  Mutation function      lxc.profiles.info( local ,  default ).then(response =  {      console.log(response)  })   Response  { \n     config :   {}, \n     description :   Default LXD profile , \n     devices :   { \n         eth0 :   { \n             name :   eth0 , \n             nictype :   bridged , \n             parent :   lxdbr0 , \n             type :   nic \n         }, \n         root :   { \n             path :   / , \n             pool :   default , \n             type :   disk \n         } \n     }, \n     name :   default , \n     used_by :   [ \n         /1.0/containers/my-container \n     ]  }", 
            "title": "Info"
        }, 
        {
            "location": "/profiles/#create", 
            "text": "Create profile.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    options  object  Profile options     mutator  function  Mutation function      lxc.profiles.create( local , {       name :  my-new-profile ,       description :  Some informative description string ,       config : {           limits.memory :  2GB      },       devices : {           kvm : {               type :  unix-char ,               path :  /dev/kvm          }      }  }).then(response =  {      console.log(response)  })   Response  {  }", 
            "title": "Create"
        }, 
        {
            "location": "/profiles/#replace", 
            "text": "Replace profile properties, update description, devices and limits.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Profile name     options  object  Profile options     mutator  function  Mutation function      lxc.profiles.replace( local ,  my-new-profile , {       config : {           limits.memory :  4GB      },       description :  Some description string ,       devices : {}  }).then(response =  {      console.log(response)  })   Response  {  }", 
            "title": "Replace"
        }, 
        {
            "location": "/profiles/#update", 
            "text": "Update profile properties, update description, devices and limits.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Profile name     options  object  Profile options     mutator  function  Mutation function      lxc.profiles.replace( local ,  my-new-profile , {       config : {           limits.memory :  4GB      },       description :  Some description string ,       devices : {}  }).then(response =  {      console.log(response)  })   Response  {  }", 
            "title": "Update"
        }, 
        {
            "location": "/profiles/#rename", 
            "text": "Rename a profile.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Profile name     newName  string  New profile name     mutator  function  Mutation function      lxc.profiles.rename( local ,  old-name ,  new-name ).then(response =  {      console.log(response)  })   Response  {  }", 
            "title": "Rename"
        }, 
        {
            "location": "/profiles/#delete", 
            "text": "Delete a profile.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    name  string  Profile name     mutator  function  Mutation function      lxc.profiles.delete( local ,  profile-name ).then(response =  {      console.log(response)  })   Response  {  }", 
            "title": "Delete"
        }, 
        {
            "location": "/server/", 
            "text": "Helper methods for server.\n\n\nInfo\n\n\nGet server information.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\n\n\nlxc.info(\nlocal\n).then(response =\n {\n\n\n    console.log(response)\n\n\n})\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \napi_extensions:\n \n[\n\n        \nstorage_zfs_remove_snapshots\n,\n\n        \ncontainer_host_shutdown_timeout\n,\n\n        \ncontainer_stop_priority\n,\n\n        \ncontainer_syscall_filtering\n,\n\n        \nauth_pki\n,\n\n        \ncontainer_last_used_at\n,\n\n        \netag\n,\n\n        \npatch\n,\n\n        \nusb_devices\n,\n\n        \nhttps_allowed_credentials\n,\n\n        \nimage_compression_algorithm\n,\n\n        \ndirectory_manipulation\n,\n\n        \ncontainer_cpu_time\n,\n\n        \nstorage_zfs_use_refquota\n,\n\n        \nstorage_lvm_mount_options\n,\n\n        \nnetwork\n,\n\n        \nprofile_usedby\n,\n\n        \ncontainer_push\n,\n\n        \ncontainer_exec_recording\n,\n\n        \ncertificate_update\n,\n\n        \ncontainer_exec_signal_handling\n,\n\n        \ngpu_devices\n,\n\n        \ncontainer_image_properties\n,\n\n        \nmigration_progress\n,\n\n        \nid_map\n,\n\n        \nnetwork_firewall_filtering\n,\n\n        \nnetwork_routes\n,\n\n        \nstorage\n,\n\n        \nfile_delete\n,\n\n        \nfile_append\n,\n\n        \nnetwork_dhcp_expiry\n,\n\n        \nstorage_lvm_vg_rename\n,\n\n        \nstorage_lvm_thinpool_rename\n,\n\n        \nnetwork_vlan\n,\n\n        \nimage_create_aliases\n,\n\n        \ncontainer_stateless_copy\n,\n\n        \ncontainer_only_migration\n,\n\n        \nstorage_zfs_clone_copy\n,\n\n        \nunix_device_rename\n,\n\n        \nstorage_lvm_use_thinpool\n,\n\n        \nstorage_rsync_bwlimit\n,\n\n        \nnetwork_vxlan_interface\n,\n\n        \nstorage_btrfs_mount_options\n,\n\n        \nentity_description\n,\n\n        \nimage_force_refresh\n,\n\n        \nstorage_lvm_lv_resizing\n,\n\n        \nid_map_base\n,\n\n        \nfile_symlinks\n,\n\n        \ncontainer_push_target\n,\n\n        \nnetwork_vlan_physical\n,\n\n        \nstorage_images_delete\n,\n\n        \ncontainer_edit_metadata\n,\n\n        \ncontainer_snapshot_stateful_migration\n,\n\n        \nstorage_driver_ceph\n,\n\n        \nstorage_ceph_user_name\n,\n\n        \nresource_limits\n,\n\n        \nstorage_volatile_initial_source\n,\n\n        \nstorage_ceph_force_osd_reuse\n,\n\n        \nstorage_block_filesystem_btrfs\n,\n\n        \nresources\n,\n\n        \nkernel_limits\n,\n\n        \nstorage_api_volume_rename\n,\n\n        \nmacaroon_authentication\n,\n\n        \nnetwork_sriov\n,\n\n        \nconsole\n,\n\n        \nrestrict_devlxd\n,\n\n        \nmigration_pre_copy\n,\n\n        \ninfiniband\n,\n\n        \nmaas_network\n,\n\n        \ndevlxd_events\n,\n\n        \nproxy\n,\n\n        \nnetwork_dhcp_gateway\n,\n\n        \nfile_get_symlink\n,\n\n        \nnetwork_leases\n,\n\n        \nunix_device_hotplug\n,\n\n        \nstorage_api_local_volume_handling\n,\n\n        \noperation_description\n,\n\n        \nclustering\n,\n\n        \nevent_lifecycle\n,\n\n        \nstorage_api_remote_volume_handling\n,\n\n        \nnvidia_runtime\n\n    \n],\n\n    \napi_status:\n \nstable\n,\n\n    \napi_version:\n \n1.0\n,\n\n    \nauth:\n \ntrusted\n,\n\n    \nauth_methods:\n \n[\n\n        \ntls\n\n    \n],\n\n    \nconfig:\n \n{\n}\n,\n\n    \nenvironment:\n \n{\n\n        \naddresses:\n \n[],\n\n        \narchitectures:\n \n[\n\n            \nx86_64\n,\n\n            \ni686\n\n        \n],\n\n        \ncertificate:\n \n-----BEGIN\n \nCERTIFICATE-----Snip-----END\n \nCERTIFICATE-----\\n\n,\n\n        \ncertificate_fingerprint:\n \ndc32c2ec49a7a234762fc4be670e7e72f8d156a1w0cf1a1d216e9abcc594f61d\n,\n\n        \ndriver:\n \nlxc\n,\n\n        \ndriver_version:\n \n3.0.0\n,\n\n        \nkernel:\n \nLinux\n,\n\n        \nkernel_architecture:\n \nx86_64\n,\n\n        \nkernel_version:\n \n4.13.0-38-generic\n,\n\n        \nserver:\n \nlxd\n,\n\n        \nserver_clustered:\n \nfalse,\n\n        \nserver_name:\n \nmy-lxd-server\n,\n\n        \nserver_pid:\n \n906,\n\n        \nserver_version:\n \n3.0.0\n,\n\n        \nstorage:\n \nzfs\n,\n\n        \nstorage_version:\n \n1\n\n    \n}\n,\n\n    \npublic:\n \nfalse\n\n\n}\n\n\n\n\n\n\nReplace\n\n\nReplaces the server configuration or other properties.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nThe server options\n\n\n\n\n\n\n\n\n\n\nReplaces any existing config with the provided one.\n\n\nlxc.replace(\nlocal\n, {\n\n\n    \nconfig\n: {\n\n\n        \ncore.trust_password\n: \nmy-new-password\n,\n\n\n        \ncore.https_address\n: \n[::]:8443\n\n\n    }\n\n\n}).then(response =\n {\n\n\n    console.log(response)\n\n\n})\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nUpdate\n\n\nUpdates the server configuration or other properties.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nThe server options\n\n\n\n\n\n\n\n\n\n\nUpdates only the listed keys, rest remain intact.\n\n\nlxc.update(\nlocal\n, {\n\n\n    \nconfig\n: {\n\n\n        \ncore.trust_password\n: \nmy-new-password\n,\n\n\n        \ncore.https_address\n: \n[::]:8443\n\n\n    }\n\n\n}).then(response =\n {\n\n\n    console.log(response)\n\n\n})\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}\n\n\n\n\n\n\nResources\n\n\nGet information about the resources available to the LXD server.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\n\n\nlxc.server.resources(\nlocal\n).then(response =\n {\n\n\n    console.log(response)\n\n\n})\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \ncpu\n:\n \n{\n\n        \nsockets\n:\n \n[\n\n            \n{\n\n                \ncores\n:\n \n6\n,\n\n                \nfrequency\n:\n \n3700\n,\n\n                \nfrequency_turbo\n:\n \n4700\n,\n\n                \nname\n:\n \nIntel\n,\n\n                \nthreads\n:\n \n12\n,\n\n                \nvendor\n:\n \nIntel Core i7-8700K\n\n            \n}\n\n        \n],\n\n        \ntotal\n:\n \n6\n\n    \n},\n\n    \nmemory\n:\n \n{\n\n        \ntotal\n:\n \n126590324224\n,\n\n        \nused\n:\n \n1426169856\n\n    \n},\n\n    \npool\n:\n \n{\n\n        \ninodes\n:\n \n{\n\n            \ntotal\n:\n \n0\n,\n\n            \nused\n:\n \n0\n\n        \n},\n\n        \nspace\n:\n \n{\n\n            \ntotal\n:\n \n0\n\n        \n}\n\n    \n}\n\n\n}\n\n\n\n\n\n\nRemotes\n\n\nGet currently defined remotes. (only works with local)\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nNone\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlxc.server.remotes().then(response =\n {\n\n\n    console.log(response)\n\n\n})\n\n\n\n\n\n\nResponse\n\n\n[\n\n    \nimages\n,\n\n    \nlocal\n,\n\n    \nubuntu\n,\n\n    \nubuntu-daily\n\n\n]\n\n\n\n\n\n\nLocal\n\n\nAllows you to execute local exec commands.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\ncommand\n\n\nstring\n\n\nShell command to run\n\n\n\n\n\n\n\n\n\n\nlxc.local(\nlxc list\n).then(response =\n {\n\n\n    console.log(response)\n\n\n})\n\n\n\n\n\n\nResponse\n\n\n+------------------+---------+-----------------------+------+------------+-----------+\n|       NAME       |  STATE  |         IPV4          | IPV6 |    TYPE    | SNAPSHOTS |\n+------------------+---------+-----------------------+------+------------+-----------+\n| my-container     | STOPPED |                       |      | EPHEMERAL  | 0         |\n+------------------+---------+-----------------------+------+------------+-----------+", 
            "title": "Server"
        }, 
        {
            "location": "/server/#info", 
            "text": "Get server information.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local     lxc.info( local ).then(response =  {      console.log(response)  })   Response  { \n     api_extensions:   [ \n         storage_zfs_remove_snapshots , \n         container_host_shutdown_timeout , \n         container_stop_priority , \n         container_syscall_filtering , \n         auth_pki , \n         container_last_used_at , \n         etag , \n         patch , \n         usb_devices , \n         https_allowed_credentials , \n         image_compression_algorithm , \n         directory_manipulation , \n         container_cpu_time , \n         storage_zfs_use_refquota , \n         storage_lvm_mount_options , \n         network , \n         profile_usedby , \n         container_push , \n         container_exec_recording , \n         certificate_update , \n         container_exec_signal_handling , \n         gpu_devices , \n         container_image_properties , \n         migration_progress , \n         id_map , \n         network_firewall_filtering , \n         network_routes , \n         storage , \n         file_delete , \n         file_append , \n         network_dhcp_expiry , \n         storage_lvm_vg_rename , \n         storage_lvm_thinpool_rename , \n         network_vlan , \n         image_create_aliases , \n         container_stateless_copy , \n         container_only_migration , \n         storage_zfs_clone_copy , \n         unix_device_rename , \n         storage_lvm_use_thinpool , \n         storage_rsync_bwlimit , \n         network_vxlan_interface , \n         storage_btrfs_mount_options , \n         entity_description , \n         image_force_refresh , \n         storage_lvm_lv_resizing , \n         id_map_base , \n         file_symlinks , \n         container_push_target , \n         network_vlan_physical , \n         storage_images_delete , \n         container_edit_metadata , \n         container_snapshot_stateful_migration , \n         storage_driver_ceph , \n         storage_ceph_user_name , \n         resource_limits , \n         storage_volatile_initial_source , \n         storage_ceph_force_osd_reuse , \n         storage_block_filesystem_btrfs , \n         resources , \n         kernel_limits , \n         storage_api_volume_rename , \n         macaroon_authentication , \n         network_sriov , \n         console , \n         restrict_devlxd , \n         migration_pre_copy , \n         infiniband , \n         maas_network , \n         devlxd_events , \n         proxy , \n         network_dhcp_gateway , \n         file_get_symlink , \n         network_leases , \n         unix_device_hotplug , \n         storage_api_local_volume_handling , \n         operation_description , \n         clustering , \n         event_lifecycle , \n         storage_api_remote_volume_handling , \n         nvidia_runtime \n     ], \n     api_status:   stable , \n     api_version:   1.0 , \n     auth:   trusted , \n     auth_methods:   [ \n         tls \n     ], \n     config:   { } , \n     environment:   { \n         addresses:   [], \n         architectures:   [ \n             x86_64 , \n             i686 \n         ], \n         certificate:   -----BEGIN   CERTIFICATE-----Snip-----END   CERTIFICATE-----\\n , \n         certificate_fingerprint:   dc32c2ec49a7a234762fc4be670e7e72f8d156a1w0cf1a1d216e9abcc594f61d , \n         driver:   lxc , \n         driver_version:   3.0.0 , \n         kernel:   Linux , \n         kernel_architecture:   x86_64 , \n         kernel_version:   4.13.0-38-generic , \n         server:   lxd , \n         server_clustered:   false, \n         server_name:   my-lxd-server , \n         server_pid:   906, \n         server_version:   3.0.0 , \n         storage:   zfs , \n         storage_version:   1 \n     } , \n     public:   false  }", 
            "title": "Info"
        }, 
        {
            "location": "/server/#replace", 
            "text": "Replaces the server configuration or other properties.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    options  object  The server options      Replaces any existing config with the provided one.  lxc.replace( local , {       config : {           core.trust_password :  my-new-password ,           core.https_address :  [::]:8443      }  }).then(response =  {      console.log(response)  })   Response  {  }", 
            "title": "Replace"
        }, 
        {
            "location": "/server/#update", 
            "text": "Updates the server configuration or other properties.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    options  object  The server options      Updates only the listed keys, rest remain intact.  lxc.update( local , {       config : {           core.trust_password :  my-new-password ,           core.https_address :  [::]:8443      }  }).then(response =  {      console.log(response)  })   Response  {  }", 
            "title": "Update"
        }, 
        {
            "location": "/server/#resources", 
            "text": "Get information about the resources available to the LXD server.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local     lxc.server.resources( local ).then(response =  {      console.log(response)  })   Response  { \n     cpu :   { \n         sockets :   [ \n             { \n                 cores :   6 , \n                 frequency :   3700 , \n                 frequency_turbo :   4700 , \n                 name :   Intel , \n                 threads :   12 , \n                 vendor :   Intel Core i7-8700K \n             } \n         ], \n         total :   6 \n     }, \n     memory :   { \n         total :   126590324224 , \n         used :   1426169856 \n     }, \n     pool :   { \n         inodes :   { \n             total :   0 , \n             used :   0 \n         }, \n         space :   { \n             total :   0 \n         } \n     }  }", 
            "title": "Resources"
        }, 
        {
            "location": "/server/#remotes", 
            "text": "Get currently defined remotes. (only works with local)  Parameters   Call     Parameter  Type  Description  Default      None        lxc.server.remotes().then(response =  {      console.log(response)  })   Response  [ \n     images , \n     local , \n     ubuntu , \n     ubuntu-daily  ]", 
            "title": "Remotes"
        }, 
        {
            "location": "/server/#local", 
            "text": "Allows you to execute local exec commands.  Parameters   Call     Parameter  Type  Description  Default      command  string  Shell command to run      lxc.local( lxc list ).then(response =  {      console.log(response)  })   Response  +------------------+---------+-----------------------+------+------------+-----------+\n|       NAME       |  STATE  |         IPV4          | IPV6 |    TYPE    | SNAPSHOTS |\n+------------------+---------+-----------------------+------+------------+-----------+\n| my-container     | STOPPED |                       |      | EPHEMERAL  | 0         |\n+------------------+---------+-----------------------+------+------------+-----------+", 
            "title": "Local"
        }, 
        {
            "location": "/snapshots/", 
            "text": "Helper methods for snapshots.\n\n\nList\n\n\nList container snapshots.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\ncontainers-\nsnapshots-\nlist(\nlocal\n, \nmy-container\n);\n\n\n\n\n\n\nResponse\n\n\n[\n\n    \n/1.0/containers/my-container/snapshots/my-snapshot\n\n\n]\n\n\n\n\n\n\nInfo\n\n\nGet container snapshot information.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nsnapshot\n\n\nstring\n\n\nSnapshot name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\ncontainers-\nsnapshots-\ninfo(\nlocal\n, \nmy-container\n, \nmy-container (April 10, 2018 6:53 PM)\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \narchitecture\n:\n \nx86_64\n,\n\n    \nconfig\n:\n \n{\n\n        \nimage.architecture\n:\n \namd64\n,\n\n        \nimage.description\n:\n \nubuntu 16.04 LTS amd64 (release) (20180306)\n,\n\n        \nimage.label\n:\n \nrelease\n,\n\n        \nimage.os\n:\n \nubuntu\n,\n\n        \nimage.release\n:\n \nxenial\n,\n\n        \nimage.serial\n:\n \n20180306\n,\n\n        \nimage.version\n:\n \n16.04\n,\n\n        \nvolatile.base_image\n:\n \nc5bbef7f4e1c19f0104fd4ub862b2e54x095d894765c75c6d72775f1d98135ec\n,\n\n        \nvolatile.eth0.hwaddr\n:\n \n00:16:3e:24:39:ee\n,\n\n        \nvolatile.eth0.name\n:\n \neth0\n,\n\n        \nvolatile.idmap.base\n:\n \n0\n,\n\n        \nvolatile.idmap.next\n:\n \n[{\\\nIsuid\\\n:true,\\\nIsgid\\\n:false,\\\nHostid\\\n:165536,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536},{\\\nIsuid\\\n:false,\\\nIsgid\\\n:true,\\\nHostid\\\n:165536,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536}]\n,\n\n        \nvolatile.last_state.idmap\n:\n \n[{\\\nIsuid\\\n:true,\\\nIsgid\\\n:false,\\\nHostid\\\n:165536,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536},{\\\nIsuid\\\n:false,\\\nIsgid\\\n:true,\\\nHostid\\\n:165536,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536}]\n,\n\n        \nvolatile.last_state.power\n:\n \nSTOPPED\n\n    \n},\n\n    \ncreated_at\n:\n \n2018-04-10T17:53:44Z\n,\n\n    \ndevices\n:\n \n{},\n\n    \nephemeral\n:\n \nfalse\n,\n\n    \nexpanded_config\n:\n \n{\n\n        \nboot.autostart\n:\n \n0\n,\n\n        \nimage.architecture\n:\n \namd64\n,\n\n        \nimage.description\n:\n \nubuntu 16.04 LTS amd64 (release) (20180306)\n,\n\n        \nimage.label\n:\n \nrelease\n,\n\n        \nimage.os\n:\n \nubuntu\n,\n\n        \nimage.release\n:\n \nxenial\n,\n\n        \nimage.serial\n:\n \n20180306\n,\n\n        \nimage.version\n:\n \n16.04\n,\n\n        \nlimits.cpu\n:\n \n1\n,\n\n        \nlimits.cpu.allowance\n:\n \n90%\n,\n\n        \nlimits.cpu.priority\n:\n \n9\n,\n\n        \nlimits.disk.priority\n:\n \n9\n,\n\n        \nlimits.memory\n:\n \n1056MB\n,\n\n        \nlimits.memory.enforce\n:\n \nhard\n,\n\n        \nlimits.memory.swap\n:\n \n1\n,\n\n        \nlimits.memory.swap.priority\n:\n \n5\n,\n\n        \nlimits.network.priority\n:\n \n9\n,\n\n        \nlimits.processes\n:\n \n14100\n,\n\n        \nsecurity.nesting\n:\n \n0\n,\n\n        \nsecurity.privileged\n:\n \n0\n,\n\n        \nvolatile.base_image\n:\n \nc5bbef7f4e1c19f0104fd49b862b2e549095d894765c75c6d72775f1d98185ec\n,\n\n        \nvolatile.eth0.hwaddr\n:\n \n00:16:3e:24:39:ee\n,\n\n        \nvolatile.eth0.name\n:\n \neth0\n,\n\n        \nvolatile.idmap.base\n:\n \n0\n,\n\n        \nvolatile.idmap.next\n:\n \n[{\\\nIsuid\\\n:true,\\\nIsgid\\\n:false,\\\nHostid\\\n:165536,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536},{\\\nIsuid\\\n:false,\\\nIsgid\\\n:true,\\\nHostid\\\n:165536,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536}]\n,\n\n        \nvolatile.last_state.idmap\n:\n \n[{\\\nIsuid\\\n:true,\\\nIsgid\\\n:false,\\\nHostid\\\n:165536,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536},{\\\nIsuid\\\n:false,\\\nIsgid\\\n:true,\\\nHostid\\\n:165536,\\\nNsid\\\n:0,\\\nMaprange\\\n:65536}]\n,\n\n        \nvolatile.last_state.power\n:\n \nSTOPPED\n\n    \n},\n\n    \nexpanded_devices\n:\n \n{\n\n        \neth0\n:\n \n{\n\n            \nnictype\n:\n \nbridged\n,\n\n            \nparent\n:\n \nlxdbr0\n,\n\n            \ntype\n:\n \nnic\n\n        \n},\n\n        \nroot\n:\n \n{\n\n            \npath\n:\n \n/\n,\n\n            \npool\n:\n \ndefault\n,\n\n            \ntype\n:\n \ndisk\n\n        \n}\n\n    \n},\n\n    \nlast_used_at\n:\n \n1970-01-01T00:00:00Z\n,\n\n    \nname\n:\n \nmy-container/my-container (April 10, 2018 6:53 PM)\n,\n\n    \nprofiles\n:\n \n[\n\n        \ndefault\n\n    \n],\n\n    \nstateful\n:\n \nfalse\n\n\n}\n\n\n\n\n\n\nCreate\n\n\nCreate container snapshot.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nSnapshot options\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\ncontainers-\nsnapshots-\ncreate(\nlocal\n, \nmy-container\n, [\n\n\n    \nname\n =\n \nmy-snapshot\n,\n\n\n    \nstateful\n =\n true\n\n\n]);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \nclass\n:\n \ntask\n,\n\n    \ncreated_at\n:\n \n2018-04-09T17:57:48.19705024Z\n,\n\n    \ndescription\n:\n \nSnapshotting container\n,\n\n    \nerr\n:\n \n,\n\n    \nid\n:\n \n5db401c7-8d31-4110-aa15-0c6398a36cdb\n,\n\n    \nmay_cancel\n:\n \nfalse\n,\n\n    \nmetadata\n:\n \nnull\n,\n\n    \nresources\n:\n \n{\n\n        \ncontainers\n:\n \n[\n\n            \n/1.0/containers/my-container\n\n        \n]\n\n    \n},\n\n    \nstatus\n:\n \nRunning\n,\n\n    \nstatus_code\n:\n \n103\n,\n\n    \nupdated_at\n:\n \n2018-04-09T17:57:48.19705024Z\n\n\n}\n\n\n\n\n\n\nRename\n\n\nRename container snapshot.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nsnapshot\n\n\nstring\n\n\nSnapshot name\n\n\n\n\n\n\n\n\nnewname\n\n\nstring\n\n\nNew snapshot name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\ncontainers-\nsnapshots-\nrename(\nlocal\n, \nmy-container\n, \nmy-snapshot-name\n, \nnew-snapshot-name\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \nclass\n:\n \ntask\n,\n\n    \ncreated_at\n:\n \n2018-04-10T19:17:15.517952676+01:00\n,\n\n    \nerr\n:\n \n,\n\n    \nid\n:\n \n1863b8ce-b3d5-4a35-87bc-959eafbb106d\n,\n\n    \nmay_cancel\n:\n \nfalse\n,\n\n    \nmetadata\n:\n \nnull\n,\n\n    \nresources\n:\n \n{\n\n        \ncontainers\n:\n \n[\n\n            \n/1.0/containers/my-container\n\n        \n]\n\n    \n},\n\n    \nstatus\n:\n \nRunning\n,\n\n    \nstatus_code\n:\n \n103\n,\n\n    \nupdated_at\n:\n \n2018-04-10T19:17:15.517952676+01:00\n\n\n}\n\n\n\n\n\n\nDelete\n\n\nDelete container snapshot.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nsnapshot\n\n\nstring\n\n\nSnapshot name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\ncontainers-\nsnapshots-\ndelete(\nlocal\n, \nmy-container\n, \nmy-snapshot-name\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n    \nclass:\n \ntask\n,\n\n    \ncreated_at:\n \n2018-04-10T20:23:56.80835635+01:00\n,\n\n    \nerr:\n \n,\n\n    \nid:\n \nd1a9df55-5748-40ff-a0e3-09e0096f278b\n,\n\n    \nmay_cancel:\n \nfalse,\n\n    \nmetadata:\n \nnull,\n\n    \nresources:\n \n{\n\n        \ncontainers:\n \n[\n/1.0/containers/my-container/my-snapshot\n]\n\n    \n}\n,\n\n    \nstatus:\n \nRunning\n,\n\n    \nstatus_code:\n \n103\n,\n\n    \nupdated_at:\n \n2018-04-10\nT\n20\n:\n23\n:\n56.80835635\n+\n01\n:\n00\n\n\n}\n\n\n\n\n\n\nRestore\n\n\nRestore container snapshot.\n\n\nParameters \n Call\n\n\n\n\n\n\n\n\nParameter\n\n\nType\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nremote\n\n\nstring\n\n\nLXD remote\n\n\nlocal\n\n\n\n\n\n\ncontainer\n\n\nstring\n\n\nContainer name\n\n\n\n\n\n\n\n\nsnapshot\n\n\nstring\n\n\nSnapshot name\n\n\n\n\n\n\n\n\nmutator\n\n\nfunction\n\n\nMutation function\n\n\n\n\n\n\n\n\n\n\n$client-\nlxd-\ncontainers-\nsnapshots-\nrestore(\nlocal\n, \nmy-container\n, \nmy-snapshot-name\n);\n\n\n\n\n\n\nResponse\n\n\n{\n\n\n\n}", 
            "title": "Snapshots"
        }, 
        {
            "location": "/snapshots/#list", 
            "text": "List container snapshots.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     mutator  function  Mutation function      $client- lxd- containers- snapshots- list( local ,  my-container );   Response  [ \n     /1.0/containers/my-container/snapshots/my-snapshot  ]", 
            "title": "List"
        }, 
        {
            "location": "/snapshots/#info", 
            "text": "Get container snapshot information.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     snapshot  string  Snapshot name     mutator  function  Mutation function      $client- lxd- containers- snapshots- info( local ,  my-container ,  my-container (April 10, 2018 6:53 PM) );   Response  { \n     architecture :   x86_64 , \n     config :   { \n         image.architecture :   amd64 , \n         image.description :   ubuntu 16.04 LTS amd64 (release) (20180306) , \n         image.label :   release , \n         image.os :   ubuntu , \n         image.release :   xenial , \n         image.serial :   20180306 , \n         image.version :   16.04 , \n         volatile.base_image :   c5bbef7f4e1c19f0104fd4ub862b2e54x095d894765c75c6d72775f1d98135ec , \n         volatile.eth0.hwaddr :   00:16:3e:24:39:ee , \n         volatile.eth0.name :   eth0 , \n         volatile.idmap.base :   0 , \n         volatile.idmap.next :   [{\\ Isuid\\ :true,\\ Isgid\\ :false,\\ Hostid\\ :165536,\\ Nsid\\ :0,\\ Maprange\\ :65536},{\\ Isuid\\ :false,\\ Isgid\\ :true,\\ Hostid\\ :165536,\\ Nsid\\ :0,\\ Maprange\\ :65536}] , \n         volatile.last_state.idmap :   [{\\ Isuid\\ :true,\\ Isgid\\ :false,\\ Hostid\\ :165536,\\ Nsid\\ :0,\\ Maprange\\ :65536},{\\ Isuid\\ :false,\\ Isgid\\ :true,\\ Hostid\\ :165536,\\ Nsid\\ :0,\\ Maprange\\ :65536}] , \n         volatile.last_state.power :   STOPPED \n     }, \n     created_at :   2018-04-10T17:53:44Z , \n     devices :   {}, \n     ephemeral :   false , \n     expanded_config :   { \n         boot.autostart :   0 , \n         image.architecture :   amd64 , \n         image.description :   ubuntu 16.04 LTS amd64 (release) (20180306) , \n         image.label :   release , \n         image.os :   ubuntu , \n         image.release :   xenial , \n         image.serial :   20180306 , \n         image.version :   16.04 , \n         limits.cpu :   1 , \n         limits.cpu.allowance :   90% , \n         limits.cpu.priority :   9 , \n         limits.disk.priority :   9 , \n         limits.memory :   1056MB , \n         limits.memory.enforce :   hard , \n         limits.memory.swap :   1 , \n         limits.memory.swap.priority :   5 , \n         limits.network.priority :   9 , \n         limits.processes :   14100 , \n         security.nesting :   0 , \n         security.privileged :   0 , \n         volatile.base_image :   c5bbef7f4e1c19f0104fd49b862b2e549095d894765c75c6d72775f1d98185ec , \n         volatile.eth0.hwaddr :   00:16:3e:24:39:ee , \n         volatile.eth0.name :   eth0 , \n         volatile.idmap.base :   0 , \n         volatile.idmap.next :   [{\\ Isuid\\ :true,\\ Isgid\\ :false,\\ Hostid\\ :165536,\\ Nsid\\ :0,\\ Maprange\\ :65536},{\\ Isuid\\ :false,\\ Isgid\\ :true,\\ Hostid\\ :165536,\\ Nsid\\ :0,\\ Maprange\\ :65536}] , \n         volatile.last_state.idmap :   [{\\ Isuid\\ :true,\\ Isgid\\ :false,\\ Hostid\\ :165536,\\ Nsid\\ :0,\\ Maprange\\ :65536},{\\ Isuid\\ :false,\\ Isgid\\ :true,\\ Hostid\\ :165536,\\ Nsid\\ :0,\\ Maprange\\ :65536}] , \n         volatile.last_state.power :   STOPPED \n     }, \n     expanded_devices :   { \n         eth0 :   { \n             nictype :   bridged , \n             parent :   lxdbr0 , \n             type :   nic \n         }, \n         root :   { \n             path :   / , \n             pool :   default , \n             type :   disk \n         } \n     }, \n     last_used_at :   1970-01-01T00:00:00Z , \n     name :   my-container/my-container (April 10, 2018 6:53 PM) , \n     profiles :   [ \n         default \n     ], \n     stateful :   false  }", 
            "title": "Info"
        }, 
        {
            "location": "/snapshots/#create", 
            "text": "Create container snapshot.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     options  object  Snapshot options     mutator  function  Mutation function      $client- lxd- containers- snapshots- create( local ,  my-container , [       name  =   my-snapshot ,       stateful  =  true  ]);   Response  { \n     class :   task , \n     created_at :   2018-04-09T17:57:48.19705024Z , \n     description :   Snapshotting container , \n     err :   , \n     id :   5db401c7-8d31-4110-aa15-0c6398a36cdb , \n     may_cancel :   false , \n     metadata :   null , \n     resources :   { \n         containers :   [ \n             /1.0/containers/my-container \n         ] \n     }, \n     status :   Running , \n     status_code :   103 , \n     updated_at :   2018-04-09T17:57:48.19705024Z  }", 
            "title": "Create"
        }, 
        {
            "location": "/snapshots/#rename", 
            "text": "Rename container snapshot.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     snapshot  string  Snapshot name     newname  string  New snapshot name     mutator  function  Mutation function      $client- lxd- containers- snapshots- rename( local ,  my-container ,  my-snapshot-name ,  new-snapshot-name );   Response  { \n     class :   task , \n     created_at :   2018-04-10T19:17:15.517952676+01:00 , \n     err :   , \n     id :   1863b8ce-b3d5-4a35-87bc-959eafbb106d , \n     may_cancel :   false , \n     metadata :   null , \n     resources :   { \n         containers :   [ \n             /1.0/containers/my-container \n         ] \n     }, \n     status :   Running , \n     status_code :   103 , \n     updated_at :   2018-04-10T19:17:15.517952676+01:00  }", 
            "title": "Rename"
        }, 
        {
            "location": "/snapshots/#delete", 
            "text": "Delete container snapshot.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     snapshot  string  Snapshot name     mutator  function  Mutation function      $client- lxd- containers- snapshots- delete( local ,  my-container ,  my-snapshot-name );   Response  { \n     class:   task , \n     created_at:   2018-04-10T20:23:56.80835635+01:00 , \n     err:   , \n     id:   d1a9df55-5748-40ff-a0e3-09e0096f278b , \n     may_cancel:   false, \n     metadata:   null, \n     resources:   { \n         containers:   [ /1.0/containers/my-container/my-snapshot ] \n     } , \n     status:   Running , \n     status_code:   103 , \n     updated_at:   2018-04-10 T 20 : 23 : 56.80835635 + 01 : 00  }", 
            "title": "Delete"
        }, 
        {
            "location": "/snapshots/#restore", 
            "text": "Restore container snapshot.  Parameters   Call     Parameter  Type  Description  Default      remote  string  LXD remote  local    container  string  Container name     snapshot  string  Snapshot name     mutator  function  Mutation function      $client- lxd- containers- snapshots- restore( local ,  my-container ,  my-snapshot-name );   Response  {  }", 
            "title": "Restore"
        }
    ]
}